/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package smsfinal;

import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Derrick Witness
 */
public class RecordExam extends javax.swing.JDialog {
      Connection conn =  null;
      PreparedStatement pst = null;
      Statement stm = null;
      ResultSet rs = null;
      
      
      juniorGrading jg = new juniorGrading();
      seniorGrading sg = new seniorGrading();
      seniorGradingSciencesMath sgSM = new seniorGradingSciencesMath();
      
    /**
     * Creates new form RecordExam
     */
    public RecordExam(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        iconMethod();
        // button_update.setEnabled(false);
        SimpleDateFormat D = new SimpleDateFormat("yyyy");
        Date  dat = new Date();
        txt_year.setText(D.format(dat));
    }
    public void iconMethod()
    {
    this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("students.png")));
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel13 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        Marks_Math = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        Marks_English = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        Marks_Kisw = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        adm_No = new javax.swing.JTextField();
        combo_exam = new javax.swing.JComboBox();
        jLabel25 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        term = new javax.swing.JComboBox();
        frm = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_year = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        Marks_Agric1 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        Marks_Bus1 = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        save_button = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        Marks_history = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        Marks_geography = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        Marks_CRE = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        Marks_Biology = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Marks_Chem = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        Marks_Physics = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel13.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Compulsory"));

        jLabel7.setText("Maths:");

        Marks_Math.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        Marks_Math.setToolTipText("MATH");
        Marks_Math.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Marks_MathKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Marks_MathKeyTyped(evt);
            }
        });

        jLabel8.setText("English:");

        Marks_English.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        Marks_English.setToolTipText("ENGLISH");
        Marks_English.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Marks_EnglishKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Marks_EnglishKeyTyped(evt);
            }
        });

        jLabel14.setText("Kiswahili:");

        Marks_Kisw.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        Marks_Kisw.setToolTipText("KISWAHILI");
        Marks_Kisw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Marks_KiswActionPerformed(evt);
            }
        });
        Marks_Kisw.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Marks_KiswKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Marks_KiswKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(Marks_English, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addComponent(Marks_Kisw)
                    .addComponent(Marks_Math, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Marks_Math, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(Marks_English, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(Marks_Kisw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Student Details"));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Adm No.:");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Name:");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Form:");

        name.setEditable(false);
        name.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nameKeyTyped(evt);
            }
        });

        adm_No.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        adm_No.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                adm_NoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                adm_NoKeyTyped(evt);
            }
        });

        combo_exam.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select Exam--", "CAT 1", "CAT 2", "End Term" }));
        combo_exam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_examActionPerformed(evt);
            }
        });

        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel25.setText("Exam:");

        jLabel9.setText("Term:");

        term.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select Term--", "1", "2", "3" }));

        frm.setEditable(false);
        frm.setHorizontalAlignment(javax.swing.JTextField.TRAILING);

        jLabel3.setText("Year:");

        txt_year.setHorizontalAlignment(javax.swing.JTextField.TRAILING);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(term, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(combo_exam, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(adm_No)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(frm, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(txt_year))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adm_No, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(frm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(term, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo_exam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Optional Subjects"));

        jLabel17.setText("Agriculture:");

        Marks_Agric1.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        Marks_Agric1.setToolTipText("AGRICULTURE");
        Marks_Agric1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Marks_Agric1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Marks_Agric1KeyTyped(evt);
            }
        });

        jLabel21.setText("Business St:");

        Marks_Bus1.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        Marks_Bus1.setToolTipText("BST");
        Marks_Bus1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Marks_Bus1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Marks_Bus1KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel17)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Marks_Bus1, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addComponent(Marks_Agric1))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(Marks_Agric1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(Marks_Bus1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Commands"));

        save_button.setText("SAVE");
        save_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_buttonActionPerformed(evt);
            }
        });

        jButton8.setText("DELETE");
        jButton8.setToolTipText("Deletes the student's exam marks for the selected exam");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("CLEAR");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(save_button, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(save_button, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Humanities"));

        jLabel11.setText("History:");

        Marks_history.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        Marks_history.setToolTipText("HISTORY");
        Marks_history.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Marks_historyKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Marks_historyKeyTyped(evt);
            }
        });

        jLabel12.setText("Geography:");

        Marks_geography.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        Marks_geography.setToolTipText("GEOGRAPHY");
        Marks_geography.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Marks_geographyKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Marks_geographyKeyTyped(evt);
            }
        });

        jLabel13.setText("CRE:");

        Marks_CRE.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        Marks_CRE.setToolTipText("CRE");
        Marks_CRE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Marks_CREKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Marks_CREKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(Marks_CRE, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addComponent(Marks_geography, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Marks_history, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(72, 72, 72))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(Marks_history, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Marks_geography, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(Marks_CRE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Sciences"));

        jLabel5.setText("Biology:");

        Marks_Biology.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        Marks_Biology.setToolTipText("BIOLOGY");
        Marks_Biology.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Marks_BiologyKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Marks_BiologyKeyTyped(evt);
            }
        });

        jLabel6.setText("Chemistry:");

        Marks_Chem.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        Marks_Chem.setToolTipText("CHEMISTRY");
        Marks_Chem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Marks_ChemKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Marks_ChemKeyTyped(evt);
            }
        });

        jLabel10.setText("Physics:");

        Marks_Physics.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        Marks_Physics.setToolTipText("PHYSICS");
        Marks_Physics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Marks_PhysicsActionPerformed(evt);
            }
        });
        Marks_Physics.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Marks_PhysicsKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Marks_PhysicsKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(Marks_Chem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addComponent(Marks_Biology, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Marks_Physics))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Marks_Biology, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(Marks_Chem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(Marks_Physics, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(165, 165, 165))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameKeyTyped
        char c = evt.getKeyChar();
        if((Character.isDigit(c)|| c==KeyEvent.VK_BACK_SPACE)|| c==KeyEvent.VK_DELETE){
            evt.consume();
        }
    }//GEN-LAST:event_nameKeyTyped

    private void adm_NoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_adm_NoKeyReleased
        DbConnection Connect = new DbConnection();
        conn = Connect.Connectdb();
        String adm =adm_No.getText();
        SimpleDateFormat D = new SimpleDateFormat("yyyy");
        Date  dat = new Date();
        String Frm = frm.getText();
        
        String ex = "";
        if(combo_exam.getSelectedItem().equals("CAT 1"))
        {
         ex ="1";
        }if(combo_exam.getSelectedItem().equals("CAT 2"))
        {
         ex ="2";
        }if(combo_exam.getSelectedItem().equals("CAT 3"))
        {
         ex ="3";
        }
      
        String table;
        if(adm_No.getText().equals(""))
        {
            reset();
        }
       
        try{
            table = "student_exam";

            String  sqlexam = "SELECT * FROM "+table+" WHERE `adm` = ?";
            pst = conn.prepareStatement(sqlexam);
            pst.setString(1, adm_No.getText());
            rs= pst.executeQuery();

            if(rs.next())
            {
                name.setText(rs.getString("name"));
                frm.setText(rs.getString("form"));
               // strm.setText(rs.getString("stream"));
                String physics = rs.getString("phy");
                
                if(!physics.equals("0"))
                {
                    Marks_Physics.setEnabled(false);
                }else
                {
                Marks_Physics.setEnabled(true);
                }
                String history = rs.getString("his");
                String geography = rs.getString("geo");
                String cre = rs.getString("cre");
                if(!history.equals("0"))
                {
                    Marks_history.setEnabled(false);
                }else
                {
                    Marks_history.setEnabled(true);
                }
                if(!geography.equals("0"))
                {
                    Marks_geography.setEnabled(false);
                }else
                {
                    Marks_geography.setEnabled(true);
                }
                if(!cre.equals("0"))
                {
                    Marks_CRE.setEnabled(false);
                }else
                {
                Marks_CRE.setEnabled(true);
                }
               
                String agrics = rs.getString("agr");
                String bs = rs.getString("bus");
              
                if(!agrics.equals("0"))
                {
                    Marks_Agric1.setEnabled(false);
                }else
                {
                    Marks_Agric1.setEnabled(true);
                }
                if(!bs.equals("0"))
                {
                    Marks_Bus1.setEnabled(false);
                }else
                {
                    Marks_Bus1.setEnabled(true);
                }if(!physics.equals("0")&& !history.equals("0")&&!geography.equals("0")&&!cre.equals("0")&&!agrics.equals("0")&&!bs.equals("0"))
                {
                    JOptionPane.showMessageDialog( this, "The student seems to have not registered his/her subjects.","Error", JOptionPane.ERROR_MESSAGE);
                    return;
               }
                
            }else{
             
            }
          
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
            //reset();
    }//GEN-LAST:event_adm_NoKeyReleased

    private void adm_NoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_adm_NoKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)|| c==KeyEvent.VK_BACK_SPACE)|| c==KeyEvent.VK_DELETE){
            evt.consume();
        }
    }//GEN-LAST:event_adm_NoKeyTyped

    private void combo_examActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_examActionPerformed
        DbConnection Connect = new DbConnection();
        conn = Connect.Connectdb();
        if(!term.getSelectedItem().equals("--Select Term--")&& !txt_year.getText().equals("--Select Year--"))
        {
            String tm =(String) term.getSelectedItem();
            String yr = txt_year.getText();
            
                    if(combo_exam.getSelectedItem().equals("CAT 1"))
                    {
                        try{

                            String getCat_one = "SELECT * FROM `cat_one` WHERE `adm` = '"+adm_No.getText()+"'  AND `term` = '"+tm+"' AND `yearr` = '"+yr+"'";
                            stm = conn.createStatement();
                            rs = stm.executeQuery(getCat_one);

                            while(rs.next())
                            {
                                Marks_Math.setText(rs.getString("mat"));
                                Marks_English.setText(rs.getString("eng"));
                                Marks_Kisw.setText(rs.getString("kis"));
                                Marks_Biology.setText(rs.getString("bio"));
                                Marks_Chem.setText(rs.getString("che"));
                                
                                //getUncompared values
                                String phy = rs.getString("phy");
                               
                                //his
                                String his = rs.getString("his");
                               
                               //geo
                                String geo = rs.getString("geo");
                               
                                //cre
                                String cre = rs.getString("cre");
                               
                                //agr
                                String agr = rs.getString("agr");
                               
                                //bst
                                String bst = rs.getString("bst");
                              
                               
                                try{

                                    String sqlSetview = "SELECT `phy`, `geo`, `his`, `cre`, `agr`, `bus` FROM `student_exam` WHERE `adm` ='"+adm_No.getText()+"' ";
                                    stm = conn.createStatement();
                                    rs = stm.executeQuery(sqlSetview);

                                    while(rs.next())
                                    {
                                        String physics = rs.getString("phy");
                                        if(physics.equals("-"))
                                        {
                                            Marks_Physics.setText("");
                                          
                                        }else{
                                            Marks_Physics.setText(phy);
                                         
                                        }
                                        String geography = rs.getString("geo");
                                        if(geography.equals("-"))
                                        {
                                            Marks_geography.setText("");
                                            
                                        }else{
                                            Marks_geography.setText(geo);
                                          
                                        }
                                        String history = rs.getString("his");
                                        if(history.equals("-"))
                                        {
                                            Marks_history.setText("");
                                            
                                        }else{
                                            Marks_history.setText(his);
                                          
                                        }
                                        String CRE = rs.getString("cre");
                                        if(CRE.equals("-"))
                                        {
                                            Marks_CRE.setText("");
                                      
                                        }else{
                                            Marks_CRE.setText(cre);
                                           
                                        }

                                        String agriculture = rs.getString("agr");
                                        if(agriculture.equals("-"))
                                        {
                                            Marks_Agric1.setText("");
                                           
                                        }else{
                                            Marks_Agric1.setText(agr);
                                          
                                        }
                                        String business = rs.getString("bus");
                                        if(business.equals("-"))
                                        {
                                            Marks_Bus1.setText("");
                                        
                                        }else{
                                            Marks_Bus1.setText(bst);
                                       
                                        }
                                     
                                    }
                                }catch(Exception e)
                                {
                                    e.printStackTrace();
                                }


                            }
                        }catch(Exception e)
                        {
                            e.printStackTrace();
                           
                        }

                    }else if(combo_exam.getSelectedItem().equals("CAT 2"))
                    {

                       try{

                            String getCat_one = "SELECT * FROM `cat_two` WHERE `adm` = '"+adm_No.getText()+"' AND `term` = '"+tm+"' AND `yearr` = '"+yr+"'";
                            stm = conn.createStatement();
                            rs = stm.executeQuery(getCat_one);

                            while(rs.next())
                            {
                                Marks_Math.setText(rs.getString("mat"));
                                Marks_English.setText(rs.getString("eng"));
                                Marks_Kisw.setText(rs.getString("kis"));
                                Marks_Biology.setText(rs.getString("bio"));
                                Marks_Chem.setText(rs.getString("che"));
                                
                                //getUncompared values
                                String phy = rs.getString("phy");
                                String phygrd = rs.getString("phygrd");
                                //his
                                String his = rs.getString("his");
                                String hisgrd = rs.getString("hisgrd");
                               //geo
                                String geo = rs.getString("geo");
                                String geogrd = rs.getString("geogrd");
                                //cre
                                String cre = rs.getString("cre");
                                String cregrd = rs.getString("cregrd");
                                //agr
                                String agr = rs.getString("agr");
                                String agrgrd = rs.getString("agrgrd");
                                //bst
                                String bst = rs.getString("bst");
                                String bstgrd = rs.getString("bstgrd");
                               
                                try{

                                    String sqlSetview = "SELECT `phy`, `geo`, `his`, `cre`, `agr`, `bus` FROM `student_exam` WHERE `adm` ='"+adm_No.getText()+"' ";
                                    stm = conn.createStatement();
                                    rs = stm.executeQuery(sqlSetview);

                                    while(rs.next())
                                    {
                                        String physics = rs.getString("phy");
                                        if(physics.equals("-"))
                                        {
                                            Marks_Physics.setText("");
                                         
                                        }else{
                                            Marks_Physics.setText(phy);
                                            
                                        }
                                        String geography = rs.getString("geo");
                                        if(geography.equals("-"))
                                        {
                                            Marks_geography.setText("");
                                           
                                        }else{
                                            Marks_geography.setText(geo);
                                          
                                        }
                                        String history = rs.getString("his");
                                        if(history.equals("-"))
                                        {
                                            Marks_history.setText("");
                                          
                                        }else{
                                            Marks_history.setText(his);
                                           
                                        }
                                        String CRE = rs.getString("cre");
                                        if(CRE.equals("-"))
                                        {
                                            Marks_CRE.setText("");
                                          
                                        }else{
                                            Marks_CRE.setText(cre);
                                           
                                        }

                                        String agriculture = rs.getString("agr");
                                        if(agriculture.equals("-"))
                                        {
                                            Marks_Agric1.setText("");
                                           
                                        }else{
                                            Marks_Agric1.setText(agr);
                                           
                                        }
                                        String business = rs.getString("bus");
                                        if(business.equals("-"))
                                        {
                                            Marks_Bus1.setText("");
                                          
                                        }else{
                                            Marks_Bus1.setText(bst);
                                            
                                        }
                               
                                    }
                                }catch(Exception e)
                                {
                                    e.printStackTrace();
                                }


                            }
                        }catch(Exception e)
                        {
                            e.printStackTrace();
                           
                        }


                    }else if(combo_exam.getSelectedItem().equals("End Term"))
                    {
                       try{

                            String getCat_one = "SELECT * FROM `cat_three` WHERE `adm` = '"+adm_No.getText()+"' AND `term` = '"+tm+"' AND `yearr` = '"+yr+"'";
                            stm = conn.createStatement();
                            rs = stm.executeQuery(getCat_one);

                            while(rs.next())
                            {
                                Marks_Math.setText(rs.getString("mat"));
                                Marks_English.setText(rs.getString("eng"));
                                Marks_Kisw.setText(rs.getString("kis"));
                                Marks_Biology.setText(rs.getString("bio"));
                                Marks_Chem.setText(rs.getString("che"));
                                
                                //getUncompared values
                                String phy = rs.getString("phy");
                               
                                //his
                                String his = rs.getString("his");
                               //geo
                                String geo = rs.getString("geo");
                                 //cre
                                String cre = rs.getString("cre");
                                //agr
                                String agr = rs.getString("agr");
                                //bst
                                String bst = rs.getString("bst");
                               
                                try{

                                    String sqlSetview = "SELECT `phy`, `geo`, `his`, `cre`, `agr`, `bus` FROM `student_exam` WHERE `adm` ='"+adm_No.getText()+"' ";
                                    stm = conn.createStatement();
                                    rs = stm.executeQuery(sqlSetview);

                                    while(rs.next())
                                    {
                                        String physics = rs.getString("phy");
                                        if(physics.equals("-"))
                                        {
                                            Marks_Physics.setText("");
                                        
                                        }else{
                                            Marks_Physics.setText(phy);
                                            
                                        }
                                        String geography = rs.getString("geo");
                                        if(geography.equals("-"))
                                        {
                                            Marks_geography.setText("");
                                            
                                        }else{
                                            Marks_geography.setText(geo);
                                           
                                        }
                                        String history = rs.getString("his");
                                        if(history.equals("-"))
                                        {
                                            Marks_history.setText("");
                                            
                                        }else{
                                            Marks_history.setText(his);
                                            
                                        }
                                        String CRE = rs.getString("cre");
                                        if(CRE.equals("-"))
                                        {
                                            Marks_CRE.setText("");
                                          
                                        }else{
                                            Marks_CRE.setText(cre);
                                            
                                        }

                                        String agriculture = rs.getString("agr");
                                        if(agriculture.equals("-"))
                                        {
                                            Marks_Agric1.setText("");
                                          
                                        }else{
                                            Marks_Agric1.setText(agr);
                                          
                                        }
                                        String business = rs.getString("bus");
                                        if(business.equals("-"))
                                        {
                                            Marks_Bus1.setText("");
                                           
                                        }else{
                                            Marks_Bus1.setText(bst);
                                          
                                        }
                                          
                                    }
                                }catch(Exception e)
                                {
                                    e.printStackTrace();
                                }


                            }
                        }catch(Exception e)
                        {
                            e.printStackTrace();
                           
                        }

                    }else if(combo_exam.getSelectedItem().equals("AVERAGE"))
                    {

                       try{

                            String getCat_one = "SELECT * FROM `cat_avg` WHERE `adm` = '"+adm_No.getText()+"'";
                            stm = conn.createStatement();
                            rs = stm.executeQuery(getCat_one);

                            while(rs.next())
                            {
                                Marks_Math.setText(rs.getString("mat"));
                                Marks_English.setText(rs.getString("eng"));
                                Marks_Kisw.setText(rs.getString("kis"));
                                Marks_Biology.setText(rs.getString("bio"));
                                Marks_Chem.setText(rs.getString("che"));
                                
                                
                                //getUncompared values
                                String phy = rs.getString("phy");
                                String phygrd = rs.getString("phygrd");
                                //his
                                String his = rs.getString("his");
                                String hisgrd = rs.getString("hisgrd");
                               //geo
                                String geo = rs.getString("geo");
                                String geogrd = rs.getString("geogrd");
                                //cre
                                String cre = rs.getString("cre");
                                String cregrd = rs.getString("cregrd");
                                //agr
                                String agr = rs.getString("agr");
                                String agrgrd = rs.getString("agrgrd");
                                //bst
                                String bst = rs.getString("bst");
                                String bstgrd = rs.getString("bstgrd");
                               
                                try{

                                    String sqlSetview = "SELECT `phy`, `geo`, `his`, `cre`, `agr`, `bus` FROM `student_exam` WHERE `adm` ='"+adm_No.getText()+"' ";
                                    stm = conn.createStatement();
                                    rs = stm.executeQuery(sqlSetview);

                                    while(rs.next())
                                    {
                                        String physics = rs.getString("phy");
                                        if(physics.equals("-"))
                                        {
                                            Marks_Physics.setText("");
                                        
                                        }else{
                                            Marks_Physics.setText(phy);
                                         
                                        }
                                        String geography = rs.getString("geo");
                                        if(geography.equals("-"))
                                        {
                                            Marks_geography.setText("");
                                           
                                        }else{
                                            Marks_geography.setText(geo);
                                           
                                        }
                                        String history = rs.getString("his");
                                        if(history.equals("-"))
                                        {
                                            Marks_history.setText("");
                                          
                                        }else{
                                            Marks_history.setText(his);
                                            
                                        }
                                        String CRE = rs.getString("cre");
                                        if(CRE.equals("-"))
                                        {
                                            Marks_CRE.setText("");
                                           
                                        }else{
                                            Marks_CRE.setText(cre);
                                           
                                        }

                                        String agriculture = rs.getString("agr");
                                        if(agriculture.equals("-"))
                                        {
                                            Marks_Agric1.setText("");
                                           
                                        }else{
                                            Marks_Agric1.setText(agr);
                                           
                                        }
                                        String business = rs.getString("bus");
                                        if(business.equals("-"))
                                        {
                                            Marks_Bus1.setText("");
                                           
                                        }else{
                                            Marks_Bus1.setText(bst);
                                            
                                        }
                                           
                                    }
                                }catch(Exception e)
                                {
                                    e.printStackTrace();
                                }


                            }
                        }catch(Exception e)
                        {
                            e.printStackTrace();
                           
                        }

                    }

               
        }
    
    }//GEN-LAST:event_combo_examActionPerformed

    private void Marks_MathKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Marks_MathKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)|| c==KeyEvent.VK_BACK_SPACE)|| c==KeyEvent.VK_DELETE){
            evt.consume();
        }
    }//GEN-LAST:event_Marks_MathKeyTyped

    private void Marks_EnglishKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Marks_EnglishKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)|| c==KeyEvent.VK_BACK_SPACE)|| c==KeyEvent.VK_DELETE){
            evt.consume();
        }
    }//GEN-LAST:event_Marks_EnglishKeyTyped

    private void Marks_KiswActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Marks_KiswActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Marks_KiswActionPerformed

    private void Marks_KiswKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Marks_KiswKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)|| c==KeyEvent.VK_BACK_SPACE)|| c==KeyEvent.VK_DELETE){
            evt.consume();
        }
    }//GEN-LAST:event_Marks_KiswKeyTyped

    private void Marks_BiologyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Marks_BiologyKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)|| c==KeyEvent.VK_BACK_SPACE)|| c==KeyEvent.VK_DELETE){
            evt.consume();
        }
    }//GEN-LAST:event_Marks_BiologyKeyTyped

    private void Marks_ChemKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Marks_ChemKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)|| c==KeyEvent.VK_BACK_SPACE)|| c==KeyEvent.VK_DELETE){
            evt.consume();
        }
    }//GEN-LAST:event_Marks_ChemKeyTyped

    private void Marks_PhysicsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Marks_PhysicsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Marks_PhysicsActionPerformed

    private void Marks_PhysicsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Marks_PhysicsKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)|| c==KeyEvent.VK_BACK_SPACE)|| c==KeyEvent.VK_DELETE){
            evt.consume();
        }
    }//GEN-LAST:event_Marks_PhysicsKeyTyped

    private void Marks_historyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Marks_historyKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)|| c==KeyEvent.VK_BACK_SPACE)|| c==KeyEvent.VK_DELETE){
            evt.consume();
        }
    }//GEN-LAST:event_Marks_historyKeyTyped

    private void Marks_geographyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Marks_geographyKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)|| c==KeyEvent.VK_BACK_SPACE)|| c==KeyEvent.VK_DELETE){
            evt.consume();
        }
    }//GEN-LAST:event_Marks_geographyKeyTyped

    private void Marks_CREKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Marks_CREKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)|| c==KeyEvent.VK_BACK_SPACE)|| c==KeyEvent.VK_DELETE){
            evt.consume();
        }
    }//GEN-LAST:event_Marks_CREKeyTyped

    private void Marks_Agric1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Marks_Agric1KeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)|| c==KeyEvent.VK_BACK_SPACE)|| c==KeyEvent.VK_DELETE){
            evt.consume();
        }
    }//GEN-LAST:event_Marks_Agric1KeyTyped

    private void Marks_Bus1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Marks_Bus1KeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)|| c==KeyEvent.VK_BACK_SPACE)|| c==KeyEvent.VK_DELETE){
            evt.consume();
        }
    }//GEN-LAST:event_Marks_Bus1KeyTyped

    private void save_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_buttonActionPerformed
        DbConnection Connect = new DbConnection();
        conn = Connect.Connectdb();
        if (adm_No.getText().equals(""))
        {
            JOptionPane.showMessageDialog( this, "Please enter student's Admission number","Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
         if (term.getSelectedItem().equals("--Select Term--"))
        {
            JOptionPane.showMessageDialog( this, "Please select the term","Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
          if (combo_exam.getSelectedItem().equals("--Select Exam--"))
        {
            JOptionPane.showMessageDialog( this, "Please select the exam","Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String sname, terM, AdmNo, mat, eng, kis, bio, chem, phy,phy_2, his,his_2, geo,geo_2, cre,cre_2, agr,agr_2, bst,bst_2, fNem, sNem, form, stream;
        int average =0;
        terM = (String) term.getSelectedItem();
        AdmNo = adm_No.getText();
        sname = name.getText();
        form = frm.getText();
        stream = "";
        mat = Marks_Math.getText();
        eng = Marks_English.getText();
        kis = Marks_Kisw.getText();
        bio = Marks_Biology.getText();
        chem = Marks_Chem.getText();
        phy = Marks_Physics.getText();
        phy_2 = Marks_Physics.getText();
        his = Marks_history.getText();
        his_2 = Marks_history.getText();
        geo = Marks_geography.getText();
        geo_2 = Marks_geography.getText();
        cre = Marks_CRE.getText();
        cre_2 = Marks_CRE.getText();
        agr = Marks_Agric1.getText();
        agr_2 = Marks_Agric1.getText();
        bst = Marks_Bus1.getText();
        bst_2 = Marks_Bus1.getText();
       // int mat_ = mat/3;
       
        try{
            String sql = "SELECT * FROM `student_exam` WHERE `adm` = '"+adm_No.getText()+"'";
            stm = conn.createStatement();
            rs = stm.executeQuery(sql);

            while(rs.next())
            {
                if(Marks_Math.getText().equals(""))
                {
                    mat = "0";
                }
                if(Marks_English.getText().equals(""))
                {
                    eng = "0";
                }
                if(Marks_Kisw.getText().equals(""))
                {
                    kis = "0";
                }
                if(Marks_Biology.getText().equals(""))
                {
                    bio = "0";
                }
                if(Marks_Chem.getText().equals(""))
                {
                    chem ="0";
                }
                String kcpe = rs.getString("kcpe");
                String physics = rs.getString("phy");
                if(physics.equals("-"))
                {
                    phy = "0";
                    phy_2 = "";
                     
                }
                String history = rs.getString("his");
                String geography = rs.getString("geo");
                String CRE = rs.getString("cre");
                if(history.equals("-"))
                {
                    his = "0";
                    his_2 = "";
                }
                if(geography.equals("-"))
                {
                    geo = "0";
                    geo_2 ="";
                }
                if(CRE.equals("-"))
                {
                    cre = "0";
                    cre_2 = "";
                }
               
                String agrics = rs.getString("agr");
                String bs = rs.getString("bus");
              
                if(agrics.equals("-"))
                {
                    agr = "0";
                    agr_2 = "";
                }
                if(bs.equals("-"))
                {
                    bst = "0";
                    bst_2 ="";
                }
               
                int av = 0, tot =0;
                //saving
                SimpleDateFormat D = new SimpleDateFormat("yyyy");
                Date  dat = new Date();
                //String tm =(String) term.getSelectedItem();
                
                if(!term.getSelectedItem().equals("--Select Term--"))
                {
                    if(combo_exam.getSelectedItem().equals("CAT 1"))
                    {  
                        if(frm.getText().equals("1")|| frm.getText().equals("2"))
                        {
                           
                            if(Marks_Physics.getText().equals(""))
                            {
                                phy = "0";
                            }
                            if(Marks_history.getText().equals(""))
                            {
                                his = "0";
                            }
                            if(Marks_geography.getText().equals(""))
                            {
                                geo = "0";
                            }
                            if(Marks_CRE.getText().equals(""))
                            {
                                cre = "0";
                            }
                            if(Marks_Agric1.getText().equals(""))
                            {
                                agr ="0";
                            }
                            if(Marks_Bus1.getText().equals(""))
                            {
                                bst ="0";
                            }
                            
                            tot = Integer.parseInt(mat)+ Integer.parseInt(eng)+ Integer.parseInt(kis)+ Integer.parseInt(bio) +Integer.parseInt(chem)+ Integer.parseInt(phy)+ Integer.parseInt(his)+ Integer.parseInt(geo)+ Integer.parseInt(cre)+  Integer.parseInt(agr)+ Integer.parseInt(bst);
                            av= tot/11;
                              try{
                                    String sqlCAT1 ="INSERT INTO `cat_one_calc`(`adm`, `yearr`, `term`, `name`, `form`, `stream`, `kcpe`, `mat`, `eng`, `kis`, `che`, `bio`, `phy`, `geo`, `his`, `cre`, `bst`, `agr`, `total`, `meanmark`) VALUES ('"+AdmNo+"','"+D.format(dat)+"','"+terM+"','"+sname+"','"+form+"','"+stream+"','"+kcpe+"','"+mat+"','"+eng+"','"+kis+"','"+chem+"','"+bio+"','"+phy+"','"+geo+"','"+his+"','"+cre+"','"+bst+"','"+agr+"','"+tot+"','"+av+"')"; 
                                    pst = conn.prepareStatement(sqlCAT1);
                                    pst.execute();
                                    
                                    try{
                                        String sqlCAT_1 ="INSERT INTO `cat_one`(`adm`, `yearr`, `term`, `name`, `form`, `stream`, `kcpe`, `mat`, `matgrd`, `matcomment`, `eng`, `enggrd`, `engcomment`, `kis`, `kisgrd`, `kiscomment`, `che`, `chegrd`, `checomment`, `bio`, `biogrd`, `biocomment`, `phy`, `phygrd`, `phycomment`, `geo`, `geogrd`, `geocomment`, `his`, `hisgrd`, `hiscomment`, `cre`, `cregrd`, `crecomment`, `bst`, `bstgrd`, `bstcomment`, `agr`, `agrgrd`, `agrcomment`, `total`, `meanmark`, `meangrd`) VALUES ('"+AdmNo+"','"+D.format(dat)+"','"+terM+"','"+sname+"','"+form+"','"+stream+"','"+kcpe+"','"+mat+"','"+jg.juniorGetGrade(mat)+"','"+jg.juniorGetComment(mat)+"','"+eng+"','"+jg.juniorGetGrade(eng)+"','"+jg.juniorGetComment(eng)+"','"+kis+"','"+jg.juniorGetGrade(kis)+"','"+jg.juniorSwaComment(kis)+"','"+chem+"','"+jg.juniorGetGrade(chem)+"','"+jg.juniorGetComment(chem)+"','"+bio+"','"+jg.juniorGetGrade(bio)+"','"+jg.juniorGetComment(bio)+"','"+phy_2+"','"+jg.juniorGetGrade(phy_2)+"','"+jg.juniorGetComment(phy_2)+"','"+geo_2+"','"+jg.juniorGetGrade(geo_2)+"','"+jg.juniorGetComment(geo_2)+"','"+his_2+"','"+jg.juniorGetGrade(his_2)+"','"+jg.juniorGetComment(his_2)+"','"+cre_2+"','"+jg.juniorGetGrade(cre_2)+"','"+jg.juniorGetComment(cre_2)+"','"+bst_2+"','"+jg.juniorGetGrade(bst_2)+"','"+jg.juniorGetComment(bst_2)+"','"+agr_2+"','"+jg.juniorGetGrade(agr_2)+"','"+jg.juniorGetComment(agr_2)+"','"+tot+"','"+av+"','"+jg.juniorGetGrade(String.valueOf(av))+"')"; 
                                        pst = conn.prepareStatement(sqlCAT_1);
                                        pst.execute();
                                        //save avg
                                        try{
                                            String sqlAv ="INSERT INTO `cat_avg_calc`(`adm`, `yearr`, `term`, `name`, `form`, `stream`, `kcpe`, `mat`, `eng`, `kis`, `che`, `bio`, `phy`, `geo`, `his`, `cre`, `bst`, `agr`, `total`, `meanmark`) VALUES ('"+AdmNo+"','"+D.format(dat)+"','"+terM+"','"+sname+"','"+form+"','"+stream+"','"+kcpe+"','"+Integer.parseInt(mat)/3+"','"+Integer.parseInt(eng)/3+"','"+Integer.parseInt(kis)/3+"','"+Integer.parseInt(chem)/3+"','"+Integer.parseInt(bio)/3+"','"+Integer.parseInt(phy)/3+"','"+Integer.parseInt(geo)/3+"','"+Integer.parseInt(his)/3+"','"+Integer.parseInt(cre)/3+"','"+Integer.parseInt(bst)/3+"','"+Integer.parseInt(agr)/3+"','"+tot/3+"','"+av/3+"')"; 
                                            pst = conn.prepareStatement(sqlAv);
                                            pst.execute();
                                            try{
                                                String sqlAv2 ="INSERT INTO `cat_avg`(`adm`, `yearr`, `term`, `name`, `form`, `stream`, `kcpe`, `mat`, `matgrd`, `matcomment`, `eng`, `enggrd`, `engcomment`, `kis`, `kisgrd`, `kiscomment`, `che`, `chegrd`, `checomment`, `bio`, `biogrd`, `biocomment`, `phy`, `phygrd`, `phycomment`, `geo`, `geogrd`, `geocomment`, `his`, `hisgrd`, `hiscomment`, `cre`, `cregrd`, `crecomment`, `bst`, `bstgrd`, `bstcomment`, `agr`, `agrgrd`, `agrcomment`, `total`, `meanmark`, `meangrd`) VALUES ('"+AdmNo+"','"+D.format(dat)+"','"+terM+"','"+sname+"','"+form+"','"+stream+"','"+kcpe+"','"+String.valueOf(Integer.parseInt(mat)/3)+"','"+jg.juniorGetGrade(String.valueOf(Integer.parseInt(mat)/3))+"','"+jg.juniorGetComment(String.valueOf(Integer.parseInt(mat)/3))+"','"+String.valueOf(Integer.parseInt(eng)/3)+"','"+jg.juniorGetGrade(String.valueOf(Integer.parseInt(eng)/3))+"','"+jg.juniorGetComment(String.valueOf(Integer.parseInt(eng)/3))+"','"+String.valueOf(Integer.parseInt(kis)/3)+"','"+jg.juniorGetGrade(String.valueOf(Integer.parseInt(kis)/3))+"','"+jg.juniorGetComment(String.valueOf(Integer.parseInt(kis)/3))+"','"+String.valueOf(Integer.parseInt(chem)/3)+"','"+jg.juniorGetGrade(String.valueOf(Integer.parseInt(chem)/3))+"','"+jg.juniorGetComment(String.valueOf(Integer.parseInt(chem)/3))+"','"+String.valueOf(Integer.parseInt(bio)/3)+"','"+jg.juniorGetGrade(String.valueOf(Integer.parseInt(bio)/3))+"','"+jg.juniorGetComment(String.valueOf(Integer.parseInt(bio)/3))+"','"+String.valueOf(Integer.parseInt(phy)/3)+"','"+jg.juniorGetGrade(String.valueOf(Integer.parseInt(phy)/3))+"','"+jg.juniorGetComment(String.valueOf(Integer.parseInt(phy)/3))+"','"+String.valueOf(Integer.parseInt(geo)/3)+"','"+jg.juniorGetGrade(String.valueOf(Integer.parseInt(geo)/3))+"','"+jg.juniorGetComment(String.valueOf(Integer.parseInt(geo)/3))+"','"+String.valueOf(Integer.parseInt(his)/3)+"','"+jg.juniorGetGrade(String.valueOf(Integer.parseInt(his)/3))+"','"+jg.juniorGetComment(String.valueOf(Integer.parseInt(his)/3))+"','"+String.valueOf(Integer.parseInt(agr)/3)+"','"+jg.juniorGetGrade(String.valueOf(Integer.parseInt(cre)/3))+"','"+jg.juniorGetComment(String.valueOf(Integer.parseInt(cre)/3))+"','"+String.valueOf(Integer.parseInt(bst)/3)+"','"+jg.juniorGetGrade(String.valueOf(Integer.parseInt(bst)/3))+"','"+jg.juniorGetComment(String.valueOf(Integer.parseInt(bst)/3))+"','"+String.valueOf(Integer.parseInt(agr)/3)+"','"+jg.juniorGetGrade(String.valueOf(Integer.parseInt(agr)/3))+"','"+jg.juniorGetComment(String.valueOf(Integer.parseInt(agr)/3))+"','"+tot/3+"','"+av/3+"','"+jg.juniorGetGrade(String.valueOf(av/3))+"')";
                                                pst = conn.prepareStatement(sqlAv2);
                                                pst.execute();
                                                JOptionPane.showMessageDialog( this, "Student CAT 1 marks for term "+term.getSelectedItem()+" have been saved succesfully","Success", JOptionPane.PLAIN_MESSAGE);
                                               reset();
                                            }catch(Exception e)
                                            {
                                            e.printStackTrace();
                                            }
                                           
                                        }catch(Exception e)
                                        {
                                        }
                                        
                                    }catch(Exception e)
                                    {
                                    e.printStackTrace();
                                    }
                                }catch(Exception e)
                                {
                                  JOptionPane.showMessageDialog( this, "Ooops. The student appears to have already done the term "+term.getSelectedItem()+" "+combo_exam.getSelectedItem()+" exam.\n","Error", JOptionPane.ERROR_MESSAGE);
                                 return; 
                                }
                                    
                                
                        }if(frm.getText().equals("3")|| frm.getText().equals("4"))//
                        {
                           
                            int CompTotal = Integer.parseInt(mat)+Integer.parseInt(eng)+ Integer.parseInt(kis);
                            //bestScience
                            int bestScience [] = {Integer.parseInt(bio),Integer.parseInt(phy),Integer.parseInt(chem)};
                            Arrays.sort(bestScience);
                            int bScience = bestScience[2]+bestScience[1];
                            //get best othres
                            int bestHumApp [] = { Integer.parseInt(geo),Integer.parseInt(his), Integer.parseInt(cre),Integer.parseInt(agr),Integer.parseInt(bst)};
                            Arrays.sort(bestHumApp);
                            int bhum = bestHumApp[4]+bestHumApp[3];
                            //get best othres
                            int tot34 = CompTotal + bScience + bhum;
                            //get av
                            int av34 = tot34/7;
                           
                            try{
                                    String sqlCAT1 ="INSERT INTO `cat_one_calc`(`adm`, `yearr`, `term`, `name`, `form`, `stream`, `kcpe`, `mat`, `eng`, `kis`, `che`, `bio`, `phy`, `geo`, `his`, `cre`, `bst`, `agr`, `total`, `meanmark`) VALUES ('"+AdmNo+"','"+D.format(dat)+"','"+terM+"','"+sname+"','"+form+"','"+stream+"','"+kcpe+"','"+mat+"','"+eng+"','"+kis+"','"+chem+"','"+bio+"','"+phy+"','"+geo+"','"+his+"','"+cre+"','"+bst+"','"+agr+"','"+tot34+"','"+av34+"')"; 
                                    pst = conn.prepareStatement(sqlCAT1);
                                    pst.execute();
                                    
                                    try{
                                        String sqlCAT_1 ="INSERT INTO `cat_one`(`adm`, `yearr`, `term`, `name`, `form`, `stream`, `kcpe`, `mat`, `matgrd`, `matcomment`, `eng`, `enggrd`, `engcomment`, `kis`, `kisgrd`, `kiscomment`, `che`, `chegrd`, `checomment`, `bio`, `biogrd`, `biocomment`, `phy`, `phygrd`, `phycomment`, `geo`, `geogrd`, `geocomment`, `his`, `hisgrd`, `hiscomment`, `cre`, `cregrd`, `crecomment`, `bst`, `bstgrd`, `bstcomment`, `agr`, `agrgrd`, `agrcomment`, `total`, `meanmark`, `meangrd`) VALUES ('"+AdmNo+"','"+D.format(dat)+"','"+terM+"','"+sname+"','"+form+"','"+stream+"','"+kcpe+"','"+mat+"','"+sgSM.seniorGetGradeScienceXMath(mat)+"','"+sgSM.seniorGetCommentScienceXMath(mat)+"','"+eng+"','"+sg.seniorGetGradeLanguageXhumanities(eng)+"','"+sg.seniorGetComment(eng)+"','"+kis+"','"+sg.seniorGetGradeLanguageXhumanities(kis)+"','"+sg.seniorSwaCommentLanguageXhumanities(kis)+"','"+chem+"','"+sgSM.seniorGetGradeScienceXMath(chem)+"','"+sgSM.seniorGetCommentScienceXMath(chem)+"','"+bio+"','"+sgSM.seniorGetGradeScienceXMath(bio)+"','"+sgSM.seniorGetCommentScienceXMath(bio)+"','"+phy_2+"','"+sgSM.seniorGetGradeScienceXMath(phy_2)+"','"+sgSM.seniorGetCommentScienceXMath(phy_2)+"','"+geo_2+"','"+sg.seniorGetGradeLanguageXhumanities(geo_2)+"','"+sg.seniorGetComment(geo_2)+"','"+his_2+"','"+sg.seniorGetGradeLanguageXhumanities(his_2)+"','"+sg.seniorGetComment(his_2)+"','"+cre_2+"','"+sg.seniorGetGradeLanguageXhumanities(cre_2)+"','"+sg.seniorGetComment(cre_2)+"','"+bst_2+"','"+sg.seniorGetGradeLanguageXhumanities(bst_2)+"','"+sg.seniorGetComment(bst_2)+"','"+agr_2+"','"+sg.seniorGetGradeLanguageXhumanities(agr_2)+"','"+sg.seniorGetComment(agr_2)+"','"+tot+"','"+av+"','"+sg.seniorGetGradeLanguageXhumanities(String.valueOf(av))+"')"; 
                                        pst = conn.prepareStatement(sqlCAT_1);
                                        pst.execute();
                                        //save avgs
                                        try{
                                            String sqlAv ="INSERT INTO `cat_avg_calc`(`adm`, `yearr`, `term`, `name`, `form`, `stream`, `kcpe`, `mat`, `eng`, `kis`, `che`, `bio`, `phy`, `geo`, `his`, `cre`, `bst`, `agr`, `total`, `meanmark`) VALUES ('"+AdmNo+"','"+D.format(dat)+"','"+terM+"','"+sname+"','"+form+"','"+stream+"','"+kcpe+"','"+Integer.parseInt(mat)/3+"','"+Integer.parseInt(eng)/3+"','"+Integer.parseInt(kis)/3+"','"+Integer.parseInt(chem)/3+"','"+Integer.parseInt(bio)/3+"','"+Integer.parseInt(phy)/3+"','"+Integer.parseInt(geo)/3+"','"+Integer.parseInt(his)/3+"','"+Integer.parseInt(cre)/3+"','"+Integer.parseInt(bst)/3+"','"+Integer.parseInt(agr)/3+"','"+tot/3+"','"+av/3+"')"; 
                                            pst = conn.prepareStatement(sqlAv);
                                            pst.execute();
                                            try{
                                                String sqlAv_ ="INSERT INTO `cat_avg`(`adm`, `yearr`, `term`, `name`, `form`, `stream`, `kcpe`, `mat`, `matgrd`, `matcomment`, `eng`, `enggrd`, `engcomment`, `kis`, `kisgrd`, `kiscomment`, `che`, `chegrd`, `checomment`, `bio`, `biogrd`, `biocomment`, `phy`, `phygrd`, `phycomment`, `geo`, `geogrd`, `geocomment`, `his`, `hisgrd`, `hiscomment`, `cre`, `cregrd`, `crecomment`, `bst`, `bstgrd`, `bstcomment`, `agr`, `agrgrd`, `agrcomment`, `total`, `meanmark`, `meangrd`) VALUES ('"+AdmNo+"','"+D.format(dat)+"','"+terM+"','"+sname+"','"+form+"','"+stream+"','"+kcpe+"','"+Integer.parseInt(mat)/3+"','"+sgSM.seniorGetGradeScienceXMath(String.valueOf(Integer.parseInt(mat)/3))+"','"+sgSM.seniorGetCommentScienceXMath(String.valueOf(Integer.parseInt(mat)/3))+"','"+Integer.parseInt(eng)/3+"','"+sg.seniorGetGradeLanguageXhumanities(String.valueOf(Integer.parseInt(eng)/3))+"','"+sg.seniorGetComment(String.valueOf(Integer.parseInt(eng)/3))+"','"+Integer.parseInt(kis)/3+"','"+sg.seniorGetGradeLanguageXhumanities(String.valueOf(Integer.parseInt(kis)/3))+"','"+sg.seniorSwaCommentLanguageXhumanities(String.valueOf(Integer.parseInt(kis)/3))+"','"+Integer.parseInt(chem)/3+"','"+sgSM.seniorGetGradeScienceXMath(String.valueOf(Integer.parseInt(chem)/3))+"','"+sgSM.seniorGetCommentScienceXMath(String.valueOf(Integer.parseInt(chem)/3))+"','"+Integer.parseInt(bio)/3+"','"+sgSM.seniorGetGradeScienceXMath(String.valueOf(Integer.parseInt(bio)/3))+"','"+sgSM.seniorGetCommentScienceXMath(String.valueOf(Integer.parseInt(bio)/3))+"','"+String.valueOf(sg.seniorGetAv(phy_2))+"','"+sgSM.seniorGetGradeScienceXMath(String.valueOf(sg.seniorGetAv(phy_2)))+"','"+sgSM.seniorGetCommentScienceXMath(String.valueOf(sg.seniorGetAv(phy_2)))+"','"+String.valueOf(sg.seniorGetAv(geo_2))+"','"+sg.seniorGetGradeLanguageXhumanities(String.valueOf(sg.seniorGetAv(geo_2)))+"','"+sg.seniorGetComment(String.valueOf(sg.seniorGetAv(geo_2)))+"','"+String.valueOf(sg.seniorGetAv(his_2))+"','"+sg.seniorGetGradeLanguageXhumanities(String.valueOf(sg.seniorGetAv(his_2)))+"','"+sg.seniorGetComment(String.valueOf(sg.seniorGetAv(his_2)))+"','"+String.valueOf(sg.seniorGetAv(cre_2))+"','"+sg.seniorGetGradeLanguageXhumanities(String.valueOf(sg.seniorGetAv(cre_2)))+"','"+sg.seniorGetComment(String.valueOf(sg.seniorGetAv(cre_2)))+"','"+String.valueOf(sg.seniorGetAv(bst_2))+"','"+sg.seniorGetGradeLanguageXhumanities(String.valueOf(sg.seniorGetAv(bst_2)))+"','"+sg.seniorGetComment(String.valueOf(sg.seniorGetAv(bst_2)))+"','"+String.valueOf(sg.seniorGetAv(agr_2))+"','"+sg.seniorGetGradeLanguageXhumanities(String.valueOf(sg.seniorGetAv(agr_2)))+"','"+sg.seniorGetComment(String.valueOf(sg.seniorGetAv(agr_2)))+"','"+tot/3+"','"+av/3+"','"+sg.seniorGetGradeLanguageXhumanities(String.valueOf(av/3))+"')";
                                                pst = conn.prepareStatement(sqlAv_);
                                                pst.execute();
                                                 JOptionPane.showMessageDialog( this, "Student CAT 1 marks for term "+term.getSelectedItem()+" have been saved succesfully","Success", JOptionPane.PLAIN_MESSAGE);
                                             reset();
                                            }catch(Exception e)
                                            {
                                             e.printStackTrace();
                                            }
                                        }catch(Exception e)
                                        {
                                        e.printStackTrace();
                                        }
                                        
                                    }catch(Exception e)
                                    {
                                    e.printStackTrace();
                                    }
                                }catch(Exception e)
                                {
                                    e.printStackTrace();
                                 JOptionPane.showMessageDialog( this, "Ooops. The student appears to have already done the term "+term.getSelectedItem()+" "+combo_exam.getSelectedItem()+" exam.\n","Error", JOptionPane.ERROR_MESSAGE);
                                 return; 
                                }
                                    
                           
                        }
                        
                    }else if(combo_exam.getSelectedItem().equals("CAT 2"))
                    {
                         try{
                                String sqlGetCAT1 ="SELECT * FROM `cat_one_calc` WHERE `adm` = '"+adm_No.getText()+"' AND `yearr` = '"+txt_year.getText()+"' AND `term` = '"+term.getSelectedItem()+"'";
                                stm = conn.createStatement();
                                rs = stm.executeQuery(sqlGetCAT1);

                                while(rs.next())
                                {
                                    int mat1 = rs.getInt("mat");
                                    int eng1 = rs.getInt("eng");
                                    int kis1 = rs.getInt("kis");
                                    int bio1 = rs.getInt("bio");
                                    int che1 = rs.getInt("che");
                                    int phy1 = rs.getInt("phy");
                                    int his1 = rs.getInt("his");
                                    int geo1 = rs.getInt("geo");
                                    int cre1 = rs.getInt("cre");
                                    int agr1 = rs.getInt("agr");
                                    int bst1 = rs.getInt("bst");
                                    //get new avg
                                    int matAv = (mat1+Integer.parseInt(mat))/3;
                                    int engAv = (eng1+Integer.parseInt(eng))/3;
                                    int kisAv = (kis1+Integer.parseInt(kis))/3;
                                    int bioAv = (bio1+Integer.parseInt(bio))/3;
                                    int cheAv = (che1+Integer.parseInt(chem))/3;
                                    int phyAv = (phy1+Integer.parseInt(phy))/3;
                                    int hisAv = (his1+Integer.parseInt(his))/3;
                                    int geoAv = (geo1+Integer.parseInt(geo))/3;
                                    int creAv = (cre1+Integer.parseInt(cre))/3;
                                    int agrAv = (agr1+Integer.parseInt(agr))/3;
                                    int bstAv = (bst1+Integer.parseInt(bst))/3;
                                    //
                                    String ireAv_2 = "",phyAv_2 = "",hisAv_2 = "",geoAv_2 = "",artAv_2 = "",creAv_2 = "",hscAv_2 = "",agrAv_2 = "",bstAv_2 = "",freAv_2 = "",mscAv_2 = "",cmpAv_2 = "";
                                
                                    if(physics.equals("-"))
                                    {
                                     phyAv_2 = "";
                                    }else{

                                        phyAv_2 = String.valueOf((phy1+Integer.parseInt(phy)));

                                    }if(history.equals("-"))
                                    {
                                        hisAv_2 = "";
                                    }else{

                                        hisAv_2 = String.valueOf((his1+Integer.parseInt(his)));

                                    }if(geography.equals("-"))
                                    {
                                        geoAv_2 = "";
                                    }else{

                                        geoAv_2 = String.valueOf((geo1+Integer.parseInt(geo)));

                                    }if(CRE.equals("-"))
                                    {
                                        creAv_2 = "";
                                    }else{

                                        creAv_2 = String.valueOf((cre1+Integer.parseInt(cre)));

                                    }
                                    if(agrics.equals("-"))
                                    {
                                        agrAv_2 = "";
                                    }else{

                                        agrAv_2 = String.valueOf((agr1+Integer.parseInt(agr)));

                                    }if(bs.equals("-"))
                                    {
                                        bstAv_2 = "";
                                    }else{

                                        bstAv_2 = String.valueOf((bst1+Integer.parseInt(bst)));

                                    }
                                   
                                     if(frm.getText().equals("1")|| frm.getText().equals("2"))
                                    {
                                        if(Marks_Math.getText().equals(""))
                                        {
                                            mat = "0";
                                        }
                                        if(Marks_English.getText().equals(""))
                                        {
                                            eng = "0";
                                        }
                                        if(Marks_Kisw.getText().equals(""))
                                        {
                                            kis = "0";
                                        }
                                        if(Marks_Biology.getText().equals(""))
                                        {
                                            bio = "0";
                                        }
                                        if(Marks_Chem.getText().equals(""))
                                        {
                                            chem ="0";
                                        }
                                        if(Marks_Physics.getText().equals(""))
                                        {
                                            phy = "0";
                                        }
                                        if(Marks_history.getText().equals(""))
                                        {
                                            his = "0";
                                        }
                                        if(Marks_geography.getText().equals(""))
                                        {
                                            geo = "0";
                                        }
                                        if(Marks_CRE.getText().equals(""))
                                        {
                                            cre = "0";
                                        }
                                        if(Marks_Agric1.getText().equals(""))
                                        {
                                            agr ="0";
                                        }
                                        if(Marks_Bus1.getText().equals(""))
                                        {
                                            bst ="0";
                                        }
                            
                                        tot = Integer.parseInt(mat)+ Integer.parseInt(eng)+ Integer.parseInt(kis)+ Integer.parseInt(bio) +Integer.parseInt(chem)+ Integer.parseInt(phy)+ Integer.parseInt(his)+ Integer.parseInt(geo)+ Integer.parseInt(cre)+  Integer.parseInt(agr)+ Integer.parseInt(bst);
                                        av= tot/11;
                                          try{
                                                String sqlCAT2 ="INSERT INTO `cat_two_calc`(`adm`, `yearr`, `term`, `name`, `form`, `stream`, `kcpe`, `mat`, `eng`, `kis`, `che`, `bio`, `phy`, `geo`, `his`, `cre`, `bst`, `agr`, `total`, `meanmark`) VALUES ('"+AdmNo+"','"+D.format(dat)+"','"+terM+"','"+sname+"','"+form+"','"+stream+"','"+kcpe+"','"+mat+"','"+eng+"','"+kis+"','"+chem+"','"+bio+"','"+phy+"','"+geo+"','"+his+"','"+cre+"','"+bst+"','"+agr+"','"+tot+"','"+av+"')"; 
                                                pst = conn.prepareStatement(sqlCAT2);
                                                pst.execute();

                                                try{
                                                    String sqlCAT_2 ="INSERT INTO `cat_two`(`adm`, `yearr`, `term`, `name`, `form`, `stream`, `kcpe`, `mat`, `matgrd`, `matcomment`, `eng`, `enggrd`, `engcomment`, `kis`, `kisgrd`, `kiscomment`, `che`, `chegrd`, `checomment`, `bio`, `biogrd`, `biocomment`, `phy`, `phygrd`, `phycomment`, `geo`, `geogrd`, `geocomment`, `his`, `hisgrd`, `hiscomment`, `cre`, `cregrd`, `crecomment`, `bst`, `bstgrd`, `bstcomment`, `agr`, `agrgrd`, `agrcomment`, `total`, `meanmark`, `meangrd`) VALUES ('"+AdmNo+"','"+D.format(dat)+"','"+terM+"','"+sname+"','"+form+"','"+stream+"','"+kcpe+"','"+mat+"','"+jg.juniorGetGrade(mat)+"','"+jg.juniorGetComment(mat)+"','"+eng+"','"+jg.juniorGetGrade(eng)+"','"+jg.juniorGetComment(eng)+"','"+kis+"','"+jg.juniorGetGrade(kis)+"','"+jg.juniorGetComment(kis)+"','"+chem+"','"+jg.juniorGetGrade(chem)+"','"+jg.juniorGetComment(chem)+"','"+bio+"','"+jg.juniorGetGrade(bio)+"','"+jg.juniorGetComment(bio)+"','"+phy_2+"','"+jg.juniorGetGrade(phy_2)+"','"+jg.juniorGetComment(phy_2)+"','"+geo_2+"','"+jg.juniorGetGrade(geo_2)+"','"+jg.juniorGetComment(geo_2)+"','"+his_2+"','"+jg.juniorGetGrade(his_2)+"','"+jg.juniorGetComment(his_2)+"','"+cre_2+"','"+jg.juniorGetGrade(cre_2)+"','"+jg.juniorGetComment(cre_2)+"','"+bst_2+"','"+jg.juniorGetGrade(bst_2)+"','"+jg.juniorGetComment(bst_2)+"','"+agr_2+"','"+jg.juniorGetGrade(agr_2)+"','"+jg.juniorGetComment(agr_2)+"','"+tot+"','"+av+"','"+jg.juniorGetGrade(String.valueOf(av))+"')"; 
                                                    pst = conn.prepareStatement(sqlCAT_2);
                                                    pst.execute();
                                                    //avg shit
                                                  int  tot_ = matAv+ engAv+ kisAv+ bioAv +cheAv+ phyAv+ hisAv+ geoAv+ creAv+ agrAv+ bstAv;
                                                    int av_= tot_/11;
                                                    //UPDATE AVG
                                                    try{
                                                        String sqlAv = "UPDATE `cat_avg_calc` SET `mat`='"+matAv+"',`eng`='"+engAv+"',`kis`='"+kisAv+"',`che`='"+cheAv+"',`bio`='"+bioAv+"',`phy`='"+phyAv+"',`geo`='"+geoAv+"',`his`='"+hisAv+"',`cre`='"+creAv+"',`bst`='"+bstAv+"',`agr`='"+agrAv+"',`total`='"+tot_+"',`meanmark`='"+av_+"' WHERE `adm` = '"+AdmNo+"' AND `yearr` = '"+D.format(dat)+"' AND `term` = '"+term.getSelectedItem()+"'";
                                                        pst = conn.prepareStatement(sqlAv);
                                                        pst.execute();

                                                        try{
                                                            String sqlAv2 = "UPDATE `cat_avg` SET `mat`='"+matAv+"',`matgrd`='"+jg.juniorGetGrade(String.valueOf(matAv))+"',`matcomment`='"+jg.juniorGetComment(String.valueOf(matAv))+"',`eng`='"+engAv+"',`enggrd`='"+jg.juniorGetGrade(String.valueOf(engAv))+"',`engcomment`='"+jg.juniorGetComment(String.valueOf(engAv))+"',`kis`='"+kisAv+"',`kisgrd`='"+jg.juniorGetGrade(String.valueOf(kisAv))+"',`kiscomment`='"+jg.juniorSwaComment(String.valueOf(kisAv))+"',`che`='"+cheAv+"',`chegrd`='"+jg.juniorGetGrade(String.valueOf(cheAv))+"',`checomment`='"+jg.juniorGetComment(String.valueOf(cheAv))+"',`bio`='"+bioAv+"',`biogrd`='"+jg.juniorGetGrade(String.valueOf(bioAv))+"',`biocomment`='"+jg.juniorGetComment(String.valueOf(bioAv))+"',`phy`='"+phyAv+"',`phygrd`='"+jg.juniorGetGrade(String.valueOf(phyAv))+"',`phycomment`='"+jg.juniorGetComment(String.valueOf(phyAv))+"',`geo`='"+geoAv+"',`geogrd`='"+jg.juniorGetGrade(String.valueOf(geoAv))+"',`geocomment`='"+jg.juniorGetComment(String.valueOf(geoAv))+"',`his`='"+hisAv+"',`hisgrd`='"+jg.juniorGetGrade(String.valueOf(hisAv))+"',`hiscomment`='"+jg.juniorGetComment(String.valueOf(hisAv))+"',`cre`='"+creAv+"',`cregrd`='"+jg.juniorGetGrade(String.valueOf(creAv))+"',`crecomment`='"+jg.juniorGetComment(String.valueOf(creAv))+"',`bst`='"+bstAv+"',`bstgrd`='"+jg.juniorGetGrade(String.valueOf(bstAv))+"',`bstcomment`='"+jg.juniorGetComment(String.valueOf(bstAv))+"',`agr`='"+agrAv+"',`agrgrd`='"+jg.juniorGetGrade(String.valueOf(agrAv))+"',`agrcomment`='"+jg.juniorGetComment(String.valueOf(agrAv))+"',`total`='"+tot_+"',`meanmark`='"+av_+"',`meangrd`='"+jg.juniorGetGrade(String.valueOf(av_))+"' WHERE `adm` = '"+AdmNo+"' AND `yearr`= '"+D.format(dat)+"' AND `term` = '"+terM+"'";
                                                            pst = conn.prepareStatement(sqlAv2);
                                                            pst.execute();
                                                             JOptionPane.showMessageDialog( this, "Student CAT 2 marks for term "+term.getSelectedItem()+" have been saved succesfully","Success", JOptionPane.PLAIN_MESSAGE);
                                                             reset();
                                                        }catch(Exception e)
                                                        {
                                                            e.printStackTrace();
                                                        }
                                                    }catch(Exception e)
                                                    {
                                                        e.printStackTrace();
                                                        //JOptionPane.showMessageDialog( this, "Ooops. The student appears to have already done the term "+term.getSelectedItem()+" "+combo_exam.getSelectedItem()+" exam.\n","Error", JOptionPane.ERROR_MESSAGE);
                                                        return;
                                                    }

                                                }catch(Exception e)
                                                {
                                                e.printStackTrace();
                                                }
                                            }catch(Exception e)
                                            {
                                             JOptionPane.showMessageDialog( this, "Ooops. The student appears to have already done the term "+term.getSelectedItem()+" "+combo_exam.getSelectedItem()+" exam.\n","Error", JOptionPane.ERROR_MESSAGE);
                                              return; 
                                            }


                                    }if(frm.getText().equals("3")|| frm.getText().equals("4"))//
                                    {
                                        int CompTotal = Integer.parseInt(mat)+Integer.parseInt(eng)+ Integer.parseInt(kis);
                                        //bestScience
                                        int bestScience [] = {Integer.parseInt(bio),Integer.parseInt(phy),Integer.parseInt(chem)};
                                        Arrays.sort(bestScience);
                                        int bScience = bestScience[2]+bestScience[1];
                                        //get best othres
                                        int bestHumApp [] = { Integer.parseInt(geo),Integer.parseInt(his), Integer.parseInt(cre),Integer.parseInt(agr),Integer.parseInt(bst)};
                                        Arrays.sort(bestHumApp);
                                        int bhum = bestHumApp[4]+bestHumApp[3];
                                        //get best othres
                                        int tot34 = CompTotal + bScience + bhum;
                                        //get av
                                        int av34 = tot34/7;

                                        try{
                                                String sqlCAT2 ="INSERT INTO `cat_two_calc`(`adm`, `yearr`, `term`, `name`, `form`, `stream`, `kcpe`, `mat`, `eng`, `kis`, `che`, `bio`, `phy`, `geo`, `his`, `cre`, `bst`, `agr`, `total`, `meanmark`) VALUES ('"+AdmNo+"','"+D.format(dat)+"','"+terM+"','"+sname+"','"+form+"','"+stream+"','"+kcpe+"','"+mat+"','"+eng+"','"+kis+"','"+chem+"','"+bio+"','"+phy+"','"+geo+"','"+his+"','"+cre+"','"+bst+"','"+agr+"','"+tot34+"','"+av34+"')"; 
                                                pst = conn.prepareStatement(sqlCAT2);
                                                pst.execute();

                                                try{
                                                    String sqlCAT_2 ="INSERT INTO `cat_two`(`adm`, `yearr`, `term`, `name`, `form`, `stream`, `kcpe`, `mat`, `matgrd`, `matcomment`, `eng`, `enggrd`, `engcomment`, `kis`, `kisgrd`, `kiscomment`, `che`, `chegrd`, `checomment`, `bio`, `biogrd`, `biocomment`, `phy`, `phygrd`, `phycomment`, `geo`, `geogrd`, `geocomment`, `his`, `hisgrd`, `hiscomment`, `cre`, `cregrd`, `crecomment`, `bst`, `bstgrd`, `bstcomment`, `agr`, `agrgrd`, `agrcomment`, `total`, `meanmark`, `meangrd`) VALUES ('"+AdmNo+"','"+D.format(dat)+"','"+terM+"','"+sname+"','"+form+"','"+stream+"','"+kcpe+"','"+mat+"','"+sgSM.seniorGetGradeScienceXMath(mat)+"','"+sgSM.seniorGetCommentScienceXMath(mat)+"','"+eng+"','"+sg.seniorGetGradeLanguageXhumanities(eng)+"','"+sg.seniorGetComment(eng)+"','"+kis+"','"+sg.seniorGetGradeLanguageXhumanities(kis)+"','"+sg.seniorSwaCommentLanguageXhumanities(kis)+"','"+chem+"','"+sgSM.seniorGetGradeScienceXMath(chem)+"','"+sgSM.seniorGetCommentScienceXMath(chem)+"','"+bio+"','"+sgSM.seniorGetGradeScienceXMath(bio)+"','"+sgSM.seniorGetCommentScienceXMath(bio)+"','"+phy_2+"','"+sgSM.seniorGetGradeScienceXMath(phy_2)+"','"+sgSM.seniorGetCommentScienceXMath(phy_2)+"','"+geo_2+"','"+sg.seniorGetGradeLanguageXhumanities(geo_2)+"','"+sg.seniorGetComment(geo_2)+"','"+his_2+"','"+sg.seniorGetGradeLanguageXhumanities(his_2)+"','"+sg.seniorGetComment(his_2)+"','"+cre_2+"','"+sg.seniorGetGradeLanguageXhumanities(cre_2)+"','"+sg.seniorGetComment(cre_2)+"','"+bst_2+"','"+sg.seniorGetGradeLanguageXhumanities(bst_2)+"','"+sg.seniorGetComment(bst_2)+"','"+agr_2+"','"+sg.seniorGetGradeLanguageXhumanities(agr_2)+"','"+sg.seniorGetComment(agr_2)+"','"+tot34+"','"+av34+"','"+sg.seniorGetGradeLanguageXhumanities(String.valueOf(av34))+"')"; 
                                                    pst = conn.prepareStatement(sqlCAT_2);
                                                    pst.execute();
                                                    //avg isht------------------------------------------>>>>>>>>>>>>>
                                                    //calculate avg
                                                    int CompTotal_ = Integer.parseInt(mat)+Integer.parseInt(eng)+ Integer.parseInt(kis);
                                                    //bestScience
                                                    int bestScience_ [] = {Integer.parseInt(bio),Integer.parseInt(phy),Integer.parseInt(chem)};
                                                    Arrays.sort(bestScience_);
                                                    int bScience_ = bestScience_[2]+bestScience_[1];
                                                    //get best othres
                                                    int bestHumApp_ [] = { Integer.parseInt(geo),Integer.parseInt(his), Integer.parseInt(cre),Integer.parseInt(agr),Integer.parseInt(bst)};
                                                    Arrays.sort(bestHumApp_);
                                                    int bhum_ = bestHumApp_[4]+bestHumApp_[3];
                                                    //get best othres
                                                    int tot34_ = CompTotal_ + bScience_ + bhum_;
                                                    //get av
                                                    int av34_ = tot34_/7;
                                                    //save avg
                                                    try{
                                                            String sqlAv = "UPDATE `cat_avg_calc` SET `mat`='"+matAv+"',`eng`='"+engAv+"',`kis`='"+kisAv+"',`che`='"+cheAv+"',`bio`='"+bioAv+"',`phy`='"+phyAv+"',`geo`='"+geoAv+"',`his`='"+hisAv+"',`cre`='"+creAv+"',`bst`='"+bstAv+"',`agr`='"+agrAv+"',`total`='"+tot34_+"',`meanmark`='"+av34_+"' WHERE `adm` = '"+AdmNo+"' AND `yearr` = '"+D.format(dat)+"' AND `term` = '"+terM+"'";
                                                            pst = conn.prepareStatement(sqlAv);
                                                            pst.execute();
                                                            try{
                                                                String sqlAv_ = "UPDATE `cat_avg` SET `mat`='"+matAv+"',`matgrd`='"+sgSM.seniorGetGradeScienceXMath(String.valueOf(matAv))+"',`matcomment`='"+sgSM.seniorGetCommentScienceXMath(String.valueOf(matAv))+"',`eng`='"+engAv+"',`enggrd`='"+sg.seniorGetGradeLanguageXhumanities(String.valueOf(engAv))+"',`engcomment`='"+sg.seniorGetComment(String.valueOf(engAv))+"',`kis`='"+kisAv+"',`kisgrd`='"+sg.seniorGetGradeLanguageXhumanities(String.valueOf(kisAv))+"',`kiscomment`='"+sg.seniorSwaCommentLanguageXhumanities(String.valueOf(kisAv))+"',`che`='"+cheAv+"',`chegrd`='"+sgSM.seniorGetGradeScienceXMath(String.valueOf(cheAv))+"',`checomment`='"+sgSM.seniorGetCommentScienceXMath(String.valueOf(cheAv))+"',`bio`='"+bioAv+"',`biogrd`='"+sgSM.seniorGetGradeScienceXMath(String.valueOf(bioAv))+"',`biocomment`='"+sgSM.seniorGetCommentScienceXMath(String.valueOf(bioAv))+"',`phy`='"+String.valueOf(sg.seniorGetAv(phyAv_2))+"',`phygrd`='"+sgSM.seniorGetGradeScienceXMath(String.valueOf(sg.seniorGetAv(phyAv_2)))+"',`phycomment`='"+sgSM.seniorGetCommentScienceXMath(String.valueOf(sg.seniorGetAv(phyAv_2)))+"',`geo`='"+String.valueOf(sg.seniorGetAv(geoAv_2))+"',`geogrd`='"+sg.seniorGetGradeLanguageXhumanities(String.valueOf(sg.seniorGetAv(geoAv_2)))+"',`geocomment`='"+sg.seniorGetComment(String.valueOf(sg.seniorGetAv(geoAv_2)))+"',`his`='"+String.valueOf(sg.seniorGetAv(hisAv_2))+"',`hisgrd`='"+sg.seniorGetGradeLanguageXhumanities(String.valueOf(sg.seniorGetAv(hisAv_2)))+"',`hiscomment`='"+sg.seniorGetComment(String.valueOf(sg.seniorGetAv(hisAv_2)))+"',`cre`='"+String.valueOf(sg.seniorGetAv(creAv_2))+"',`cregrd`='"+sg.seniorGetGradeLanguageXhumanities(String.valueOf(sg.seniorGetAv(creAv_2)))+"',`crecomment`='"+sg.seniorGetComment(String.valueOf(sg.seniorGetAv(creAv_2)))+"',`bst`='"+String.valueOf(sg.seniorGetAv(bstAv_2))+"',`bstgrd`='"+sg.seniorGetGradeLanguageXhumanities(String.valueOf(sg.seniorGetAv(bstAv_2)))+"',`bstcomment`='"+sg.seniorGetComment(String.valueOf(sg.seniorGetAv(bstAv_2)))+"',`agr`='"+String.valueOf(sg.seniorGetAv(agrAv_2))+"',`agrgrd`='"+sg.seniorGetGradeLanguageXhumanities(String.valueOf(sg.seniorGetAv(agrAv_2)))+"',`agrcomment`='"+sg.seniorGetComment(String.valueOf(sg.seniorGetAv(agrAv_2)))+"',`total`='"+tot34_+"',`meanmark`='"+av34_+"',`meangrd`='"+sg.seniorGetGradeLanguageXhumanities(String.valueOf(av34_))+"' WHERE `adm` = '"+AdmNo+"' AND `yearr` = '"+D.format(dat)+"' AND `term` = '"+terM+"'";
                                                                pst = conn.prepareStatement(sqlAv_);
                                                                pst.execute();

                                                                JOptionPane.showMessageDialog( this, "Student CAT 2 marks for term "+term.getSelectedItem()+" have been saved succesfully","Success", JOptionPane.PLAIN_MESSAGE);
                                                               reset();
                                                            }catch(Exception e)
                                                            {
                                                                e.printStackTrace();
                                                            }
                                                        }catch(Exception e)
                                                        {
                                                            e.printStackTrace();
                                                        }
                                                    
                                                }catch(Exception e)
                                                {
                                                e.printStackTrace();
                                                }
                                            }catch(Exception e)
                                            {
                                               // e.printStackTrace();
                                             JOptionPane.showMessageDialog( this, "Ooops. The student appears to have already done the term "+term.getSelectedItem()+" "+combo_exam.getSelectedItem()+" exam.\n","Error", JOptionPane.ERROR_MESSAGE);
                                             return; 
                                            }

                                    }
                                }
                            }catch(Exception e)
                            {
                            }
                    }else if(combo_exam.getSelectedItem().equals("End Term"))
                    {
                         //getAvg
                        try{
                             String sqlGetCAT1 ="SELECT * FROM `cat_one_calc` WHERE `adm` = '"+adm_No.getText()+"' AND `yearr` = '"+txt_year.getText()+"' AND `term` = '"+term.getSelectedItem()+"'";
                             stm = conn.createStatement();
                             rs = stm.executeQuery(sqlGetCAT1);
                             
                             while(rs.next())
                             {
                                int mat1 = rs.getInt("mat");
                                int eng1 = rs.getInt("eng");
                                int kis1 = rs.getInt("kis");
                                int bio1 = rs.getInt("bio");
                                int che1 = rs.getInt("che");
                                int phy1 = rs.getInt("phy");
                                int his1 = rs.getInt("his");
                                int geo1 = rs.getInt("geo");
                                int cre1 = rs.getInt("cre");
                                int agr1 = rs.getInt("agr");
                                int bst1 = rs.getInt("bst");
                                try{
                                    String sqlGetCAT2 ="SELECT * FROM `cat_two_calc` WHERE `adm` = '"+adm_No.getText()+"' AND `yearr` = '"+txt_year.getText()+"' AND `term` = '"+term.getSelectedItem()+"'";
                                    stm = conn.createStatement();
                                    rs = stm.executeQuery(sqlGetCAT2);
                                    while(rs.next())
                                    {
                                        int mat2 = rs.getInt("mat");
                                        int eng2 = rs.getInt("eng");
                                        int kis2 = rs.getInt("kis");
                                        int bio2 = rs.getInt("bio");
                                        int che2 = rs.getInt("che");
                                        int phy2 = rs.getInt("phy");
                                        int his2 = rs.getInt("his");
                                        int geo2 = rs.getInt("geo");
                                        int cre2 = rs.getInt("cre");
                                        int agr2 = rs.getInt("agr");
                                        int bst2 = rs.getInt("bst");
                                        
                                        //////////
                                        int matAv = (mat1+mat2+Integer.parseInt(mat))/3;
                                        int engAv = (eng1+eng2+Integer.parseInt(eng))/3;
                                        int kisAv = (kis1+kis2+Integer.parseInt(kis))/3;
                                        int bioAv = (bio1+bio2+Integer.parseInt(bio))/3;
                                        int cheAv = (che1+che2+Integer.parseInt(chem))/3;
                                        int phyAv = (phy1+phy2+Integer.parseInt(phy))/3;
                                        int hisAv = (his1+his2+Integer.parseInt(his))/3;
                                        int geoAv = (geo1+geo2+Integer.parseInt(geo))/3;
                                        int creAv = (cre1+cre2+Integer.parseInt(cre))/3;
                                        int agrAv = (agr1+agr2+Integer.parseInt(agr))/3;
                                        int bstAv = (bst1+bst2+Integer.parseInt(bst))/3;
                                         String phyAv_2 = "",hisAv_2 = "",geoAv_2 = "",creAv_2 = "",agrAv_2 = "",bstAv_2 = "";
                                
                                        if(physics.equals("-"))
                                        {
                                         phyAv_2 = "";
                                        }else{

                                            phyAv_2 = String.valueOf(phyAv);

                                        }if(history.equals("-"))
                                        {
                                            hisAv_2 = "";
                                        }else{

                                            hisAv_2 = String.valueOf(hisAv);

                                        }if(geography.equals("-"))
                                        {
                                            geoAv_2 = "";
                                        }else{

                                            geoAv_2 = String.valueOf(geoAv);

                                        }if(CRE.equals("-"))
                                        {
                                            creAv_2 = "";
                                        }else{

                                            creAv_2 = String.valueOf(creAv);

                                        }
                                        if(agrics.equals("-"))
                                        {
                                            agrAv_2 = "";
                                        }else{

                                            agrAv_2 = String.valueOf(agrAv);

                                        }if(bs.equals("-"))
                                        {
                                            bstAv_2 = "";
                                        }else{
                                             bstAv_2 = String.valueOf(bstAv);
                                        }
                                        if(frm.getText().equals("1")|| frm.getText().equals("2"))
                                        {
                                            //calculate CAT3
                                            tot = Integer.parseInt(mat)+ Integer.parseInt(eng)+ Integer.parseInt(kis)+ Integer.parseInt(bio) +Integer.parseInt(chem)+ Integer.parseInt(phy)+ Integer.parseInt(his)+ Integer.parseInt(geo)+ Integer.parseInt(cre)+ Integer.parseInt(agr)+ Integer.parseInt(bst);
                                            av= tot/11;
                                            try{
                                                //save CAT3
                                                String sqlCAT3 ="INSERT INTO `cat_three_calc`(`adm`, `yearr`, `term`, `name`, `form`, `stream`, `kcpe`, `mat`, `eng`, `kis`, `che`, `bio`, `phy`, `geo`, `his`, `cre`, `bst`, `agr`, `total`, `meanmark`) VALUES ('"+AdmNo+"','"+D.format(dat)+"','"+terM+"','"+sname+"','"+form+"','"+stream+"','"+kcpe+"','"+mat+"','"+eng+"','"+kis+"','"+chem+"','"+bio+"','"+phy+"','"+geo+"','"+his+"','"+cre+"','"+bst+"','"+agr+"','"+tot+"','"+av+"')"; 
                                                pst = conn.prepareStatement(sqlCAT3);
                                                pst.execute();

                                                    try{
                                                        //save CAT3 table2
                                                        String sqlCAT_3 ="INSERT INTO `cat_three`(`adm`, `yearr`, `term`, `name`, `form`, `stream`, `kcpe`, `mat`, `matgrd`, `matcomment`, `eng`, `enggrd`, `engcomment`, `kis`, `kisgrd`, `kiscomment`, `che`, `chegrd`, `checomment`, `bio`, `biogrd`, `biocomment`, `phy`, `phygrd`, `phycomment`, `geo`, `geogrd`, `geocomment`, `his`, `hisgrd`, `hiscomment`, `cre`, `cregrd`, `crecomment`, `bst`, `bstgrd`, `bstcomment`, `agr`, `agrgrd`, `agrcomment`, `total`, `meanmark`, `meangrd`) VALUES ('"+AdmNo+"','"+D.format(dat)+"','"+terM+"','"+sname+"','"+form+"','"+stream+"','"+kcpe+"','"+mat+"','"+jg.juniorGetGrade(mat)+"','"+jg.juniorGetComment(mat)+"','"+eng+"','"+jg.juniorGetGrade(eng)+"','"+jg.juniorGetComment(eng)+"','"+kis+"','"+jg.juniorGetGrade(kis)+"','"+jg.juniorGetComment(kis)+"','"+chem+"','"+jg.juniorGetGrade(chem)+"','"+jg.juniorGetComment(chem)+"','"+bio+"','"+jg.juniorGetGrade(bio)+"','"+jg.juniorGetComment(bio)+"','"+phy_2+"','"+jg.juniorGetGrade(phy_2)+"','"+jg.juniorGetComment(phy_2)+"','"+geo_2+"','"+jg.juniorGetGrade(geo_2)+"','"+jg.juniorGetComment(geo_2)+"','"+his_2+"','"+jg.juniorGetGrade(his_2)+"','"+jg.juniorGetComment(his_2)+"','"+cre_2+"','"+jg.juniorGetGrade(cre_2)+"','"+jg.juniorGetComment(cre_2)+"','"+bst_2+"','"+jg.juniorGetGrade(bst_2)+"','"+jg.juniorGetComment(bst_2)+"','"+agr_2+"','"+jg.juniorGetGrade(agr_2)+"','"+jg.juniorGetComment(agr_2)+"','"+tot+"','"+av+"','"+jg.juniorGetGrade(String.valueOf(av))+"')"; 
                                                        pst = conn.prepareStatement(sqlCAT_3);
                                                        pst.execute();
                                                        //save Average
                                                        //calculate avg
                                                            int total = matAv+engAv+kisAv+bioAv+cheAv+phyAv+hisAv+geoAv+creAv+agrAv+bstAv;
                                                            average = total/11;
                                                            try{
                                                                String sqlAv = "UPDATE `cat_avg_calc` SET `mat`='"+matAv+"',`eng`='"+engAv+"',`kis`='"+kisAv+"',`che`='"+cheAv+"',`bio`='"+bioAv+"',`phy`='"+phyAv+"',`geo`='"+geoAv+"',`his`='"+hisAv+"',`cre`='"+creAv+"',`bst`='"+bstAv+"',`agr`='"+agrAv+"',`total`='"+total+"',`meanmark`='"+average+"' WHERE `adm` = '"+AdmNo+"' AND `yearr` = '"+D.format(dat)+"' AND `term` = '"+terM+"'";
                                                                pst = conn.prepareStatement(sqlAv);
                                                                pst.execute();

                                                                try{
                                                                    String sqlAv2 = "UPDATE `cat_avg` SET `mat`='"+matAv+"',`matgrd`='"+jg.juniorGetGrade(String.valueOf(matAv))+"',`matcomment`='"+jg.juniorGetComment(String.valueOf(matAv))+"',`eng`='"+engAv+"',`enggrd`='"+jg.juniorGetGrade(String.valueOf(engAv))+"',`engcomment`='"+jg.juniorGetComment(String.valueOf(engAv))+"',`kis`='"+kisAv+"',`kisgrd`='"+jg.juniorGetGrade(String.valueOf(kisAv))+"',`kiscomment`='"+jg.juniorSwaComment(String.valueOf(kisAv))+"',`che`='"+cheAv+"',`chegrd`='"+jg.juniorGetGrade(String.valueOf(cheAv))+"',`checomment`='"+jg.juniorGetComment(String.valueOf(cheAv))+"',`bio`='"+bioAv+"',`biogrd`='"+jg.juniorGetGrade(String.valueOf(bioAv))+"',`biocomment`='"+jg.juniorGetComment(String.valueOf(bioAv))+"',`phy`='"+phyAv_2+"',`phygrd`='"+jg.juniorGetGrade(phyAv_2)+"',`phycomment`='"+jg.juniorGetComment(phyAv_2)+"',`geo`='"+geoAv_2+"',`geogrd`='"+jg.juniorGetGrade(geoAv_2)+"',`geocomment`='"+jg.juniorGetComment(geoAv_2)+"',`his`='"+hisAv_2+"',`hisgrd`='"+jg.juniorGetGrade(hisAv_2)+"',`hiscomment`='"+jg.juniorGetComment(hisAv_2)+"',`cre`='"+creAv_2+"',`cregrd`='"+jg.juniorGetGrade(creAv_2)+"',`crecomment`='"+jg.juniorGetComment(creAv_2)+"',`bst`='"+bstAv_2+"',`bstgrd`='"+jg.juniorGetGrade(bstAv_2)+"',`bstcomment`='"+jg.juniorGetComment(bstAv_2)+"',`agr`='"+agrAv_2+"',`agrgrd`='"+jg.juniorGetGrade(agrAv_2)+"',`agrcomment`='"+jg.juniorGetComment(agrAv_2)+"',`total`='"+total+"',`meanmark`='"+average+"',`meangrd`='"+jg.juniorGetGrade(String.valueOf(average))+"' WHERE `adm` = '"+AdmNo+"' AND `yearr`= '"+D.format(dat)+"' AND `term` = '"+terM+"'";
                                                                    pst = conn.prepareStatement(sqlAv2);
                                                                    pst.execute();
                                                                    promote();
                                                                     JOptionPane.showMessageDialog( this, "Student  marks for end term exam have been saved succesfully","Success", JOptionPane.PLAIN_MESSAGE);
                                                                     reset();
                                                                }catch(Exception e)
                                                                {
                                                                    e.printStackTrace();
                                                                }
                                                            }catch(Exception e)
                                                            {
                                                                e.printStackTrace();
                                                            }   

                                                    }catch(Exception e)
                                                    {
                                                    e.printStackTrace();
                                                    }
                                            }catch(Exception e)
                                            {
                                                JOptionPane.showMessageDialog( this, "Ooops. The student appears to have already done the term "+term.getSelectedItem()+" "+combo_exam.getSelectedItem()+" exam.\n","Error", JOptionPane.ERROR_MESSAGE);
                                            }

                                        }if(frm.getText().equals("3")|| frm.getText().equals("4"))//
                                        {
                                            int CompTotal = Integer.parseInt(mat)+Integer.parseInt(eng)+ Integer.parseInt(kis);
                                            //bestScience
                                            int bestScience [] = {Integer.parseInt(bio),Integer.parseInt(phy),Integer.parseInt(chem)};
                                            Arrays.sort(bestScience);
                                            int bScience = bestScience[2]+bestScience[1];
                                            //get best othres
                                            int bestHumApp [] = { Integer.parseInt(geo),Integer.parseInt(his), Integer.parseInt(cre),Integer.parseInt(agr),Integer.parseInt(bst)};
                                            Arrays.sort(bestHumApp);
                                            int bhum = bestHumApp[4]+bestHumApp[3];
                                            //get best othres
                                            int tot34 = CompTotal + bScience + bhum;
                                            //get av
                                            int av34 = tot34/7;

                                            try{
                                                    String sqlCAT3 ="INSERT INTO `cat_three_calc`(`adm`, `yearr`, `term`, `name`, `form`, `stream`, `kcpe`, `mat`, `eng`, `kis`, `che`, `bio`, `phy`, `geo`, `his`, `cre`, `bst`, `agr`, `total`, `meanmark`) VALUES ('"+AdmNo+"','"+D.format(dat)+"','"+terM+"','"+sname+"','"+form+"','"+stream+"','"+kcpe+"','"+mat+"','"+eng+"','"+kis+"','"+chem+"','"+bio+"','"+phy+"','"+geo+"','"+his+"','"+cre+"','"+bst+"','"+agr+"','"+tot34+"','"+av34+"')"; 
                                                    pst = conn.prepareStatement(sqlCAT3);
                                                    pst.execute();

                                                    try{
                                                        String sqlCAT_3 ="INSERT INTO `cat_three`(`adm`, `yearr`, `term`, `name`, `form`, `stream`, `kcpe`, `mat`, `matgrd`, `matcomment`, `eng`, `enggrd`, `engcomment`, `kis`, `kisgrd`, `kiscomment`, `che`, `chegrd`, `checomment`, `bio`, `biogrd`, `biocomment`, `phy`, `phygrd`, `phycomment`, `geo`, `geogrd`, `geocomment`, `his`, `hisgrd`, `hiscomment`, `cre`, `cregrd`, `crecomment`, `bst`, `bstgrd`, `bstcomment`, `agr`, `agrgrd`, `agrcomment`, `total`, `meanmark`, `meangrd`) VALUES ('"+AdmNo+"','"+D.format(dat)+"','"+terM+"','"+sname+"','"+form+"','"+stream+"','"+kcpe+"','"+mat+"','"+sgSM.seniorGetGradeScienceXMath(mat)+"','"+sgSM.seniorGetCommentScienceXMath(mat)+"','"+eng+"','"+sg.seniorGetGradeLanguageXhumanities(eng)+"','"+sg.seniorGetComment(eng)+"','"+kis+"','"+sg.seniorGetGradeLanguageXhumanities(kis)+"','"+sg.seniorSwaCommentLanguageXhumanities(kis)+"','"+chem+"','"+sgSM.seniorGetGradeScienceXMath(chem)+"','"+sgSM.seniorGetCommentScienceXMath(chem)+"','"+bio+"','"+sgSM.seniorGetGradeScienceXMath(bio)+"','"+sgSM.seniorGetCommentScienceXMath(bio)+"','"+phy_2+"','"+sgSM.seniorGetGradeScienceXMath(phy_2)+"','"+sgSM.seniorGetCommentScienceXMath(phy_2)+"','"+geo_2+"','"+sg.seniorGetGradeLanguageXhumanities(geo_2)+"','"+sg.seniorGetComment(geo_2)+"','"+his_2+"','"+sg.seniorGetGradeLanguageXhumanities(his_2)+"','"+sg.seniorGetComment(his_2)+"','"+cre_2+"','"+sg.seniorGetGradeLanguageXhumanities(cre_2)+"','"+sg.seniorGetComment(cre_2)+"','"+bst_2+"','"+sg.seniorGetGradeLanguageXhumanities(bst_2)+"','"+sg.seniorGetComment(bst_2)+"','"+agr_2+"','"+sg.seniorGetGradeLanguageXhumanities(agr_2)+"','"+sg.seniorGetComment(agr_2)+"','"+tot34+"','"+av34+"','"+sg.seniorGetGradeLanguageXhumanities(String.valueOf(av34))+"')"; 
                                                        pst = conn.prepareStatement(sqlCAT_3);
                                                        pst.execute();
                                                        //calculate avg
                                                        int CompTotal_ = Integer.parseInt(mat)+Integer.parseInt(eng)+ Integer.parseInt(kis);
                                                        //bestScience
                                                        int bestScience_ [] = {Integer.parseInt(bio),Integer.parseInt(phy),Integer.parseInt(chem)};
                                                        Arrays.sort(bestScience_);
                                                        int bScience_ = bestScience_[2]+bestScience_[1];
                                                        //get best othres
                                                        int bestHumApp_ [] = { Integer.parseInt(geo),Integer.parseInt(his), Integer.parseInt(cre),Integer.parseInt(agr),Integer.parseInt(bst)};
                                                        Arrays.sort(bestHumApp_);
                                                        int bhum_ = bestHumApp_[4]+bestHumApp_[3];
                                                        //get best othres
                                                        int tot34_ = CompTotal_ + bScience_ + bhum_;
                                                        //get av
                                                        int av34_ = tot34_/7;
                                                        //save avg
                                                        try{
                                                            String sqlAv = "UPDATE `cat_avg_calc` SET `mat`='"+matAv +"',`eng`='"+engAv+"',`kis`='"+kisAv+"',`che`='"+cheAv+"',`bio`='"+bioAv+"',`phy`='"+phyAv+"',`geo`='"+geoAv+"',`his`='"+hisAv+"',`cre`='"+creAv+"',`bst`='"+bstAv+"',`agr`='"+agrAv+"',`total`='"+tot34_+"',`meanmark`='"+av34_+"' WHERE `adm` = '"+AdmNo+"' AND `yearr` = '"+D.format(dat)+"' AND `term` = '"+terM+"'";
                                                            pst = conn.prepareStatement(sqlAv);
                                                            pst.execute();
                                                            try{
                                                                String sqlAv_ = "UPDATE `cat_avg` SET `mat`='"+matAv+"',`matgrd`='"+sgSM.seniorGetGradeScienceXMath(String.valueOf(matAv))+"',`matcomment`='"+sgSM.seniorGetCommentScienceXMath(String.valueOf(matAv))+"',`eng`='"+engAv+"',`enggrd`='"+sg.seniorGetGradeLanguageXhumanities(String.valueOf(engAv))+"',`engcomment`='"+sg.seniorGetComment(String.valueOf(engAv))+"',`kis`='"+kisAv+"',`kisgrd`='"+sg.seniorGetGradeLanguageXhumanities(String.valueOf(kisAv))+"',`kiscomment`='"+sg.seniorSwaCommentLanguageXhumanities(String.valueOf(kisAv))+"',`che`='"+cheAv+"',`chegrd`='"+sgSM.seniorGetGradeScienceXMath(String.valueOf(cheAv))+"',`checomment`='"+sgSM.seniorGetCommentScienceXMath(String.valueOf(cheAv))+"',`bio`='"+bioAv+"',`biogrd`='"+sgSM.seniorGetGradeScienceXMath(String.valueOf(bioAv))+"',`biocomment`='"+sgSM.seniorGetCommentScienceXMath(String.valueOf(bioAv))+"',`phy`='"+phyAv_2+"',`phygrd`='"+sgSM.seniorGetGradeScienceXMath(phyAv_2)+"',`phycomment`='"+sgSM.seniorGetCommentScienceXMath(phyAv_2)+"',`geo`='"+geoAv_2+"',`geogrd`='"+sg.seniorGetGradeLanguageXhumanities(geoAv_2)+"',`geocomment`='"+sg.seniorGetComment(geoAv_2)+"',`his`='"+hisAv_2+"',`hisgrd`='"+sg.seniorGetGradeLanguageXhumanities(hisAv_2)+"',`hiscomment`='"+sg.seniorGetComment(hisAv_2)+"',`cre`='"+creAv_2+"',`cregrd`='"+sg.seniorGetGradeLanguageXhumanities(creAv_2)+"',`crecomment`='"+sg.seniorGetComment(creAv_2)+"',`bst`='"+bstAv_2+"',`bstgrd`='"+sg.seniorGetGradeLanguageXhumanities(bstAv_2)+"',`bstcomment`='"+sg.seniorGetComment(bstAv_2)+"',`agr`='"+agrAv_2+"',`agrgrd`='"+sg.seniorGetGradeLanguageXhumanities(agrAv_2)+"',`agrcomment`='"+sg.seniorGetComment(agrAv_2)+"',`total`='"+tot34_+"',`meanmark`='"+av34_+"',`meangrd`='"+sg.seniorGetGradeLanguageXhumanities(String.valueOf(av34_))+"' WHERE `adm` = '"+AdmNo+"' AND `yearr` = '"+D.format(dat)+"' AND `term` = '"+terM+"'";
                                                                pst = conn.prepareStatement(sqlAv_);
                                                                pst.execute();

                                                                 JOptionPane.showMessageDialog( this, "Student  marks for end term exam have been saved succesfully","Success", JOptionPane.PLAIN_MESSAGE);
                                                                 reset();
                                                            }catch(Exception e)
                                                            {
                                                                e.printStackTrace();
                                                            }
                                                        }catch(Exception e)
                                                        {
                                                            e.printStackTrace();
                                                        }
                                                       
                                                    }catch(Exception e)
                                                    {
                                                    e.printStackTrace();
                                                    }
                                                }catch(Exception e)
                                                {
                                                    //e.printStackTrace();
                                                 JOptionPane.showMessageDialog( this, "Ooops. The student appears to have already done the term "+term.getSelectedItem()+" "+combo_exam.getSelectedItem()+" exam.\n","Error", JOptionPane.ERROR_MESSAGE);
                                                 return; 
                                                }
                           
                                        }

                                    }
                                }catch(Exception e)
                                {
                                e.printStackTrace();
                                }
                                 
                             }
                             
                        }catch(Exception e)
                        {
                        e.printStackTrace();
                        }
                        
                    }

                 }

            }

        }catch(Exception e)
        {
            e.printStackTrace();
            //JOptionPane.showMessageDialog(null, e);
        }finally {
            try { rs.close(); } catch (Exception e) { /* ignored */ }
            try { pst.close(); } catch (Exception e) { /* ignored */ }
            try { conn.close(); } catch (Exception e) { /* ignored */ }
        }
        
    }//GEN-LAST:event_save_buttonActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        DbConnection Connect = new DbConnection();
        conn = Connect.Connectdb();
        String AdmNo = adm_No.getText();
        String yr, tm;
        yr = txt_year.getText();
        tm =(String) term.getSelectedItem();
        int option=JOptionPane.showConfirmDialog(null,"Are you sure you want to delete exam marks of student admission number "+AdmNo+" ?");
        ///delete whole or specific exam
        if(option==0)
        {
            if(combo_exam.getSelectedItem().equals("CAT 1"))
            {  
                try{

                    String sql = "DELETE FROM cat_one WHERE `adm` = '"+adm_No.getText()+"'  AND `term` = '"+tm+"' AND `yearr` = '"+yr+"'";
                    pst = conn.prepareStatement(sql);
                    pst.execute();
                    try{

                        String sql_ = "DELETE FROM cat_one_calc WHERE `adm` = '"+adm_No.getText()+"'  AND `term` = '"+tm+"' AND `yearr` = '"+yr+"'";
                        pst = conn.prepareStatement(sql_);
                        pst.execute();
                        try{

                            String sql__ = "DELETE FROM cat_one_pts WHERE `adm` = '"+adm_No.getText()+"'  AND `term` = '"+tm+"' AND `yearr` = '"+yr+"'";
                            pst = conn.prepareStatement(sql__);
                            pst.execute();
                            JOptionPane.showMessageDialog( this, "Student CAT 1 exam marks have been deleted succesfully","Success", JOptionPane.PLAIN_MESSAGE);
                        }catch(Exception ex)
                        {
                            JOptionPane.showMessageDialog( this, ex.getMessage(),"Error", JOptionPane.ERROR_MESSAGE);
                        }
                        //JOptionPane.showMessageDialog( this, "Student CAT 1 exam marks have been deleted succesfully","Success", JOptionPane.PLAIN_MESSAGE);
                    }catch(Exception ex)
                    {
                        JOptionPane.showMessageDialog( this, ex.getMessage(),"Error", JOptionPane.ERROR_MESSAGE);
                    }
                  //  JOptionPane.showMessageDialog( this, "Student CAT 1 exam marks have been deleted succesfully","Success", JOptionPane.PLAIN_MESSAGE);
                }catch(Exception ex)
                {
                    JOptionPane.showMessageDialog( this, ex.getMessage(),"Error", JOptionPane.ERROR_MESSAGE);
                }
            }else if(combo_exam.getSelectedItem().equals("CAT 2"))
            {
                 try{

                    String sql = "DELETE FROM cat_two WHERE `adm` = '"+adm_No.getText()+"'  AND `term` = '"+tm+"' AND `yearr` = '"+yr+"'";
                    pst = conn.prepareStatement(sql);
                    pst.execute();
                     try{

                        String sql_ = "DELETE FROM cat_two_pts WHERE `adm` = '"+adm_No.getText()+"'  AND `term` = '"+tm+"' AND `yearr` = '"+yr+"'";
                        pst = conn.prepareStatement(sql_);
                        pst.execute();
                         try{

                            String sql__ = "DELETE FROM cat_two_calc WHERE `adm` = '"+adm_No.getText()+"'  AND `term` = '"+tm+"' AND `yearr` = '"+yr+"'";
                            pst = conn.prepareStatement(sql__);
                            pst.execute();
                            JOptionPane.showMessageDialog( this, "Student CAT 2 exam marks have been deleted succesfully","Success", JOptionPane.PLAIN_MESSAGE);
                        }catch(Exception ex)
                        {
                            JOptionPane.showMessageDialog( this, ex.getMessage(),"Error", JOptionPane.ERROR_MESSAGE);
                        }
                        //JOptionPane.showMessageDialog( this, "Student CAT 2 exam marks have been deleted succesfully","Success", JOptionPane.PLAIN_MESSAGE);
                    }catch(Exception ex)
                    {
                        JOptionPane.showMessageDialog( this, ex.getMessage(),"Error", JOptionPane.ERROR_MESSAGE);
                    }
                   // JOptionPane.showMessageDialog( this, "Student CAT 2 exam marks have been deleted succesfully","Success", JOptionPane.PLAIN_MESSAGE);
                }catch(Exception ex)
                {
                    JOptionPane.showMessageDialog( this, ex.getMessage(),"Error", JOptionPane.ERROR_MESSAGE);
                }
            }else if(combo_exam.getSelectedItem().equals("End Term"))
            {
                 try{

                    String sql = "DELETE FROM cat_avg WHERE `adm` = '"+adm_No.getText()+"'  AND `term` = '"+tm+"' AND `yearr` = '"+yr+"'";
                    pst = conn.prepareStatement(sql);
                    pst.execute();
                    try{

                        String sql_ = "DELETE FROM cat_avg_calc WHERE `adm` = '"+adm_No.getText()+"'  AND `term` = '"+tm+"' AND `yearr` = '"+yr+"'";
                        pst = conn.prepareStatement(sql_);
                        pst.execute();
                        try{

                            String sql__ = "DELETE FROM cat_avg_pts WHERE `adm` = '"+adm_No.getText()+"'  AND `term` = '"+tm+"' AND `yearr` = '"+yr+"'";
                            pst = conn.prepareStatement(sql__);
                            pst.execute();
                            JOptionPane.showMessageDialog( this, "Student Average exam marks have been deleted succesfully","Success", JOptionPane.PLAIN_MESSAGE);
                        }catch(Exception ex)
                        {
                            JOptionPane.showMessageDialog( this, ex.getMessage(),"Error", JOptionPane.ERROR_MESSAGE);
                        }
                    //    JOptionPane.showMessageDialog( this, "Student Average exam marks have been deleted succesfully","Success", JOptionPane.PLAIN_MESSAGE);
                    }catch(Exception ex)
                    {
                        JOptionPane.showMessageDialog( this, ex.getMessage(),"Error", JOptionPane.ERROR_MESSAGE);
                    }
                   // JOptionPane.showMessageDialog( this, "Student Average exam marks have been deleted succesfully","Success", JOptionPane.PLAIN_MESSAGE);
                }catch(Exception ex)
                {
                    JOptionPane.showMessageDialog( this, ex.getMessage(),"Error", JOptionPane.ERROR_MESSAGE);
                }
            }

            

        }
        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
      reset();

    }//GEN-LAST:event_jButton9ActionPerformed

    private void Marks_MathKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Marks_MathKeyReleased
        String num = Marks_Math.getText();
        int length = num.length();
        if(length >2)
        {
            getToolkit().beep();
            num = num.substring(0,2);
            Marks_Math.setText(num);
           
        }
    }//GEN-LAST:event_Marks_MathKeyReleased

    private void Marks_EnglishKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Marks_EnglishKeyReleased
      
        String num = Marks_English.getText();
        int length = num.length();
        if(length >2)
        {
            getToolkit().beep();
            num = num.substring(0,2);
            Marks_English.setText(num);
           
        }
    }//GEN-LAST:event_Marks_EnglishKeyReleased

    private void Marks_KiswKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Marks_KiswKeyReleased
        
        String num = Marks_Kisw.getText();
        int length = num.length();
        if(length >2)
        {
            getToolkit().beep();
            num = num.substring(0,2);
            Marks_Kisw.setText(num);
           
        }
    }//GEN-LAST:event_Marks_KiswKeyReleased

    private void Marks_BiologyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Marks_BiologyKeyReleased
        // TODO add your handling code here:
            String num = Marks_Biology.getText();
            int length = num.length();
            if(length >2)
            {
                getToolkit().beep();
                num = num.substring(0,2);
                Marks_Biology.setText(num);

            }
    }//GEN-LAST:event_Marks_BiologyKeyReleased

    private void Marks_ChemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Marks_ChemKeyReleased
        
        String num = Marks_Chem.getText();
        int length = num.length();
        if(length >2)
        {
            getToolkit().beep();
            num = num.substring(0,2);
            Marks_Chem.setText(num);
           
        }
    }//GEN-LAST:event_Marks_ChemKeyReleased

    private void Marks_PhysicsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Marks_PhysicsKeyReleased
        
        String num = Marks_Physics.getText();
        int length = num.length();
        if(length >2)
        {
            getToolkit().beep();
            num = num.substring(0,2);
            Marks_Physics.setText(num);
           
        }
    }//GEN-LAST:event_Marks_PhysicsKeyReleased

    private void Marks_historyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Marks_historyKeyReleased
        
         String num = Marks_history.getText();
        int length = num.length();
        if(length >2)
        {
            getToolkit().beep();
            num = num.substring(0,2);
            Marks_history.setText(num);
           
        }
    }//GEN-LAST:event_Marks_historyKeyReleased

    private void Marks_geographyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Marks_geographyKeyReleased
        
         String num = Marks_geography.getText();
        int length = num.length();
        if(length >2)
        {
            getToolkit().beep();
            num = num.substring(0,2);
            Marks_geography.setText(num);
           
        }
    }//GEN-LAST:event_Marks_geographyKeyReleased

    private void Marks_CREKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Marks_CREKeyReleased
        
         String num = Marks_CRE.getText();
        int length = num.length();
        if(length >2)
        {
            getToolkit().beep();
            num = num.substring(0,2);
            Marks_CRE.setText(num);
           
        }
    }//GEN-LAST:event_Marks_CREKeyReleased

    private void Marks_Agric1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Marks_Agric1KeyReleased
       
         String num = Marks_Agric1.getText();
        int length = num.length();
        if(length >2)
        {
            getToolkit().beep();
            num = num.substring(0,2);
            Marks_Agric1.setText(num);
           
        }
    }//GEN-LAST:event_Marks_Agric1KeyReleased

    private void Marks_Bus1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Marks_Bus1KeyReleased
        
         String num = Marks_Bus1.getText();
        int length = num.length();
        if(length >2)
        {
            getToolkit().beep();
            num = num.substring(0,2);
            Marks_Bus1.setText(num);
           
        }
    }//GEN-LAST:event_Marks_Bus1KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RecordExam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RecordExam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RecordExam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RecordExam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RecordExam dialog = new RecordExam(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }        });

    }
    
 public void promote()
   {
        
        if(!term.getSelectedItem().equals("--Select Term--"))
        {
                if(term.getSelectedItem().equals("3") && combo_exam.getSelectedItem().equals("CAT 3"))
                    {
                        SimpleDateFormat D = new SimpleDateFormat("yyyy");
                        Date  dat = new Date();
                    
                        DbConnection Connect = new DbConnection();
                        conn = Connect.Connectdb();
                        try{
                            String getAvg= "SELECT meanmark FROM `cat_avg` WHERE adm = '"+adm_No.getText()+"' AND term = '1' AND yearr ='"+D.format(dat)+"'";
                            stm = conn.createStatement();
                            rs = stm.executeQuery(getAvg);
                            
                                while(rs.next())
                                {
                                 int mean1 = rs.getInt("meanmark");
                                  // JOptionPane.showMessageDialog(null, String.valueOf(mean1)); 
                                    try{
                                        String getAvg2=  "SELECT meanmark FROM `cat_avg` WHERE adm = '"+adm_No.getText()+"' AND term = '2' AND yearr ='"+D.format(dat)+"'";
                                        stm = conn.createStatement();
                                        rs = stm.executeQuery(getAvg2);

                                            while(rs.next())
                                            {
                                             int mean2 = rs.getInt("meanmark");
                                              try{
                                                    String getAvg3=  "SELECT meanmark FROM `cat_avg` WHERE adm = '"+adm_No.getText()+"' AND term = '3' AND yearr ='"+D.format(dat)+"'";
                                                    stm = conn.createStatement();
                                                    rs = stm.executeQuery(getAvg3);

                                                        while(rs.next())
                                                        {
                                                         int mean3 = rs.getInt("meanmark");
                                                         int promotionMark = (mean1+mean2+mean3)/3;
                                                         if(promotionMark>50)
                                                         {
                                                              int count = Integer.parseInt(frm.getText());
                                                              int nf = count+1;
                                                                String setForm ="UPDATE `new_student` SET `form`='"+nf+"'  WHERE `adm` = '"+adm_No.getText()+"'";
                                                                pst = conn.prepareStatement(setForm);
                                                                pst.execute(); 
                                                            
                                                         }
                                                       
                                                        }
                                                }catch(Exception e)
                                                {
                                                e.printStackTrace();
                                                }

                                            }
                                    }catch(Exception e)
                                    {
                                    e.printStackTrace();
                                    }
                                
                                }
                        }catch(Exception e)
                        {
                        e.printStackTrace();
                        }
                    }
        }
   }

    private void reset()
    {
        Marks_Agric1.setText("");
        combo_exam.setSelectedIndex(0);
        Marks_Biology.setText("");
        Marks_Bus1.setText("");
        Marks_CRE.setText("");
        Marks_Chem.setText("");
        Marks_English.setText("");
        term.setSelectedIndex(0);
        Marks_Kisw.setText("");
        Marks_Math.setText("");
       
        Marks_Physics.setText("");
        
        Marks_geography.setText("");
        Marks_history.setText("");
        //
        Marks_Agric1.setEnabled(true);
        
        Marks_Biology.setEnabled(true);
        Marks_Bus1.setEnabled(true);
        Marks_CRE.setEnabled(true);
        Marks_Chem.setEnabled(true);
        Marks_English.setEnabled(true);
       
        Marks_Kisw.setEnabled(true);
        Marks_Math.setEnabled(true);
        
        Marks_Physics.setEnabled(true);
        
        Marks_geography.setEnabled(true);
        Marks_history.setEnabled(true);
        
        save_button.setEnabled(true);
       // term.setSelectedIndex(0);
       // combo_exam.setSelectedIndex(0);
        adm_No.setText("");
        name.setText("");
        frm.setText("");
//        strm.setText("");
//        button_update.setEnabled(true);
    }
     

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Marks_Agric1;
    private javax.swing.JTextField Marks_Biology;
    private javax.swing.JTextField Marks_Bus1;
    private javax.swing.JTextField Marks_CRE;
    private javax.swing.JTextField Marks_Chem;
    private javax.swing.JTextField Marks_English;
    private javax.swing.JTextField Marks_Kisw;
    private javax.swing.JTextField Marks_Math;
    private javax.swing.JTextField Marks_Physics;
    private javax.swing.JTextField Marks_geography;
    private javax.swing.JTextField Marks_history;
    private javax.swing.JTextField adm_No;
    private javax.swing.JComboBox combo_exam;
    private javax.swing.JTextField frm;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTextField name;
    private javax.swing.JButton save_button;
    private javax.swing.JComboBox term;
    private javax.swing.JTextField txt_year;
    // End of variables declaration//GEN-END:variables
}
