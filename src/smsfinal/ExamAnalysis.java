/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package smsfinal;

import java.awt.TrayIcon;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileSystemView;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author HiGHROLLER
 */
public class ExamAnalysis extends javax.swing.JDialog {
    Connection conn = null;
    Statement stm = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    DisplayTrayIcon DTI = new DisplayTrayIcon();
    /**
     * Creates new form ExamAnalysis
     */
    public ExamAnalysis(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        SimpleDateFormat D = new SimpleDateFormat("yyyy");
        Date  dat = new Date();
        String siku = D.format(dat);
        combo_year.addItem("--Select Year--");
        int index = 1;
        for (int i = Integer.parseInt(siku); i > 2014; i--)
        {
           combo_year.addItem(String.valueOf(i));
          index++;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        combo_exam = new javax.swing.JComboBox();
        combo_term = new javax.swing.JComboBox();
        combo_year = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        btn_analyse = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_disp = new javax.swing.JTable();
        combo_subject = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jDesktopPane3 = new javax.swing.JDesktopPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        sub_merit = new javax.swing.JTable();
        combo_form = new javax.swing.JComboBox();
        jPanel6 = new javax.swing.JPanel();
        jDesktopPane2 = new javax.swing.JDesktopPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_mg = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("User Selection"));

        combo_exam.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select Exam--", "CAT 1", "CAT 2", "END TERM", "AVERAGE" }));

        combo_term.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select Term--", "1", "2", "3" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(combo_year, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combo_term, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combo_exam, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(combo_term, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addComponent(combo_year, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                    .addComponent(combo_exam, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Commands"));

        btn_analyse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/attatchments/project-plan_48x48.png"))); // NOI18N
        btn_analyse.setText("ANALYSE");
        btn_analyse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_analyseActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/attatchments/bar-code_48x48.png"))); // NOI18N
        jButton3.setText("GENERATE EXAM ANALYSIS");
        jButton3.setToolTipText("Prints the class subject grade count");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_analyse, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_analyse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Subject Grade Count", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

        table_disp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Form", "Entry", "A", "A-", "B+", "B", "B-", "C+", "C", "C-", "D+", "D", "D-", "E", "X", "Mean Mark"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table_disp);
        if (table_disp.getColumnModel().getColumnCount() > 0) {
            table_disp.getColumnModel().getColumn(0).setResizable(false);
            table_disp.getColumnModel().getColumn(0).setPreferredWidth(150);
            table_disp.getColumnModel().getColumn(13).setResizable(false);
            table_disp.getColumnModel().getColumn(15).setResizable(false);
            table_disp.getColumnModel().getColumn(15).setPreferredWidth(150);
        }

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 916, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDesktopPane1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        combo_subject.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select Subject--", "Mathematics", "English", "Kiswahili", "Biology", "Chemistry", "Physics", "Geography", "History", "CRE", "Agriculture", "Business Studies" }));
        combo_subject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_subjectActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDesktopPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(combo_subject, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(combo_subject, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        jTabbedPane1.addTab("Subject Grade Count", jPanel1);

        sub_merit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Position", "Subject", "Entry", "A", "A-", "B+", "B", "B-", "C+", "C", "C-", "D+", "D", "D-", "E", "X", "Mean Mark"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(sub_merit);
        if (sub_merit.getColumnModel().getColumnCount() > 0) {
            sub_merit.getColumnModel().getColumn(1).setResizable(false);
            sub_merit.getColumnModel().getColumn(1).setPreferredWidth(150);
            sub_merit.getColumnModel().getColumn(14).setResizable(false);
            sub_merit.getColumnModel().getColumn(16).setResizable(false);
            sub_merit.getColumnModel().getColumn(16).setPreferredWidth(150);
        }

        javax.swing.GroupLayout jDesktopPane3Layout = new javax.swing.GroupLayout(jDesktopPane3);
        jDesktopPane3.setLayout(jDesktopPane3Layout);
        jDesktopPane3Layout.setHorizontalGroup(
            jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 928, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane3Layout.setVerticalGroup(
            jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane3.setLayer(jScrollPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        combo_form.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select Form--", "1", "2", "3", "4" }));
        combo_form.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_formActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDesktopPane3)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(combo_form, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(combo_form, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDesktopPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Subject Merit Ranking", jPanel4);

        table_mg.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Form", "Entry", "A", "A-", "B+", "B", "B-", "C+", "C", "C-", "D+", "D", "D-", "E", "X", "Mean Mark"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(table_mg);
        if (table_mg.getColumnModel().getColumnCount() > 0) {
            table_mg.getColumnModel().getColumn(0).setResizable(false);
            table_mg.getColumnModel().getColumn(0).setPreferredWidth(150);
            table_mg.getColumnModel().getColumn(13).setResizable(false);
            table_mg.getColumnModel().getColumn(15).setResizable(false);
            table_mg.getColumnModel().getColumn(15).setPreferredWidth(150);
        }

        javax.swing.GroupLayout jDesktopPane2Layout = new javax.swing.GroupLayout(jDesktopPane2);
        jDesktopPane2.setLayout(jDesktopPane2Layout);
        jDesktopPane2Layout.setHorizontalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 916, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane2Layout.setVerticalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDesktopPane2.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane2)
                .addGap(22, 22, 22))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(195, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Overall Class M.G Count", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(15, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_analyseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_analyseActionPerformed
        // set entry
        DbConnection connect = new DbConnection();
        conn = connect.Connectdb();
                
        String term = (String) combo_term.getSelectedItem();
        String year = (String) combo_year.getSelectedItem();
        String exam = (String) combo_exam.getSelectedItem();
        if(!year.equals("--Select Year--"))
        {
            if(!term.equals("--Select Term--"))
            {
                if(!exam.equals("--Select Exam--"))
                {
                    String ex ="";
                    switch (exam) 
                    {
                        case "CAT 1":
                            ex ="1";
                            break;
                        case "CAT 2":
                            ex ="2";
                            break;
                        case "END TERM":
                            ex ="3";
                            break;
                        case "AVERAGE":
                            ex ="4";
                            break;
                    }
                    try{
                        String sql1 = "TRUNCATE TABLE  analysis;";
                        pst = conn.prepareStatement(sql1);
                        pst.execute();
                        String sql2 = "TRUNCATE TABLE  cat_one_pts;";
                        pst = conn.prepareStatement(sql2);
                        pst.execute(); 
                        String sql3 = "TRUNCATE TABLE  exammg;";
                        pst = conn.prepareStatement(sql3);
                        pst.execute(); 
                        String sql4 = "TRUNCATE TABLE  subject_entry;";
                        pst = conn.prepareStatement(sql4);
                        pst.execute();
//                     //get student points and save to a table for points only eg ******>>>cat_one_pts
                        getSavePoints sa = new getSavePoints();
                        sa.getSave_exam_pts(term, year, exam);
//
//                //      //get number of sudents(entry) and save in independent table eg **********subject_entry
                        getEntry ge = new getEntry();
                        ge.totals(term, year, ex);//entry set
//
//                ///   //get grade count from specified exam table then store the counts in final exam analysis table. to gether with entry except mean mark
//                ////        
                        gradeCount gg = new gradeCount();
                        gg.form_grade("1", year, term, ex);
                        gg.form_grade("2", year, term, ex);
                        gg.form_grade("3", year, term, ex);
                        gg.form_grade("4", year, term, ex);
                ////    update final table ad add mean mark grade using pts / entry

                        getmeanmark gm = new getmeanmark();
                        gm.findmean("1",  year,  term,  exam);
                        gm.findmean("2",  year,  term,  exam);
                        gm.findmean( "3", year,  term,  exam);
                        gm.findmean("4",  year,  term,  exam);
                        //class mean grade count
                        classMG cm = new classMG();
                        cm.getMG(term, year, "1", exam);
                        cm.getMG(term, year, "2", exam);
                        cm.getMG(term, year, "3", exam);
                        cm.getMG(term, year, "4", exam);
                        DisplayTrayIcon.trayIcon.displayMessage("Analysis Complete", "Term "+term+" "+exam+" "+year+" exam has been succesfully analysed.", TrayIcon.MessageType.INFO);
        
                    }catch(Exception e)
                    {
                    e.printStackTrace();
                    }
            //        
           
                }else{
                    JOptionPane.showMessageDialog(this, "Kindly check your exam selection","Error", JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(this, "Kindly check your term selection","Error", JOptionPane.ERROR_MESSAGE);
            }
            
        }else{
            JOptionPane.showMessageDialog(this, "Kindly check your year selection","Error", JOptionPane.ERROR_MESSAGE);
        }
       
    }//GEN-LAST:event_btn_analyseActionPerformed

    private void combo_subjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_subjectActionPerformed
        DbConnection connect = new DbConnection();
        conn = connect.Connectdb();
        String term = (String) combo_term.getSelectedItem();
        String year = (String) combo_year.getSelectedItem();
        String exam = (String) combo_exam.getSelectedItem();
        
        if(!year.equals("--Select Year--"))
        {
            if(!term.equals("--Select Term--"))
            {
                if(!exam.equals("--Select Exam--"))
                {
                    String ex ="";
                    switch (exam) 
                    {
                        case "CAT 1":
                            ex ="1";
                            break;
                        case "CAT 2":
                            ex ="2";
                            break;
                        case "END TERM":
                            ex ="3";
                            break;
                        case "AVERAGE":
                            ex ="4";
                            break;
                    }
                    if(!combo_subject.getSelectedItem().equals("--Select Subject--"))
                    {
                        jLabel1.setText("Showing subject analysis for " + combo_subject.getSelectedItem());
                        try{
                            String getCat1 ="SELECT * FROM `analysis` WHERE `yearr` = '"+year+"' AND `term` = '"+term+"' AND `exam` = '"+ex+"' AND `subject` = '"+combo_subject.getSelectedItem()+"'";
                            stm = conn.createStatement();
                            rs = stm.executeQuery(getCat1);

                            int r = 0;
                            while(rs.next())
                            {
                                table_disp.setValueAt(rs.getString("form"), r, 0);
                                table_disp.setValueAt(rs.getString("entry"), r, 1);
                                table_disp.setValueAt(rs.getString("A"), r, 2);
                                table_disp.setValueAt(rs.getString("Am"), r, 3);
                                table_disp.setValueAt(rs.getString("Bp"), r, 4);
                                table_disp.setValueAt(rs.getString("B"), r, 5);
                                table_disp.setValueAt(rs.getString("Bm"), r, 6);
                                table_disp.setValueAt(rs.getString("Cp"), r, 7);
                                table_disp.setValueAt(rs.getString("C"), r, 8);
                                table_disp.setValueAt(rs.getString("Cm"), r, 9);
                                table_disp.setValueAt(rs.getString("Dp"), r, 10);
                                table_disp.setValueAt(rs.getString("D"), r, 11);
                                table_disp.setValueAt(rs.getString("Dm"), r, 12);
                                table_disp.setValueAt(rs.getString("E"), r, 13);
                                table_disp.setValueAt(rs.getString("X"), r, 14);
                                table_disp.setValueAt(rs.getString("MM"), r, 15);
                                r++;
                            }
                            rs.close();
                            conn.close();

                        }catch(Exception e)
                        {
                            e.printStackTrace();
                        }
                       // refreshDisp();
                    }else{
                        JOptionPane.showMessageDialog( this, "Please check your subject selection.","Error", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "Kindly check your exam selection","Error", JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(this, "Kindly check your term selection","Error", JOptionPane.ERROR_MESSAGE);
            }
            
        }else{
            JOptionPane.showMessageDialog(this, "Kindly check your year selection","Error", JOptionPane.ERROR_MESSAGE);
        }
        

    }//GEN-LAST:event_combo_subjectActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        JFileChooser fr = new JFileChooser();
        FileSystemView fw = fr.getFileSystemView();
        String path = fw.getDefaultDirectory() + "/Unyolo/Exam subjet analysis";
        File fi_le = new File(path);
        if (!fi_le.exists()) {
            if (fi_le.mkdir()) {
                System.out.println("Directory is created!");
            } else {
                System.out.println("Failed to create directory!");
            }
        }
        String term = (String) combo_term.getSelectedItem();
        String year = (String) combo_year.getSelectedItem();
        String exam = (String) combo_exam.getSelectedItem();
        
        if(!year.equals("--Select Year--"))
        {
            if(!term.equals("--Select Term--"))
            {
                if(!exam.equals("--Select Exam--"))
                {
                    
                    String ex ="";
                    switch (exam)
                    {
                        case "CAT 1":
                            ex ="1";
                            break;
                        case "CAT 2":
                            ex ="2";
                            break;
                        case "END TERM":
                            ex ="3";
                            break;
                        case "AVERAGE":
                            ex ="4";
                            break;
                    }
                    subjectGradeCountReport sgr = new subjectGradeCountReport();
                    sgr.createReport( term, year, ex, path, exam);
                    subjectMeritRankingReport smr = new subjectMeritRankingReport();
                    smr.createReport( term, year, ex, path, exam);
                    classGradeCountReport cgcr = new classGradeCountReport();
                    //tableTri cgcr = new tableTri();
                    cgcr.createReport(term, year, exam, path, exam);
                    JOptionPane.showMessageDialog(null, "Exam marklists generated succesfully. You can view them in PDF format in the documents folder.");

                }else{
                    JOptionPane.showMessageDialog(this, "Kindly check your exam selection","Error", JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(this, "Kindly check your term selection","Error", JOptionPane.ERROR_MESSAGE);
            }
            
        }else{
            JOptionPane.showMessageDialog(this, "Kindly check your year selection","Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void combo_formActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_formActionPerformed
        DbConnection connect = new DbConnection();
        conn = connect.Connectdb();
        String term = (String) combo_term.getSelectedItem();
        String year = (String) combo_year.getSelectedItem();
        String exam = (String) combo_exam.getSelectedItem();
        String form = (String) combo_form.getSelectedItem();
         if(!year.equals("--Select Year--"))
        {
            if(!term.equals("--Select Term--"))
            {
                if(!exam.equals("--Select Exam--"))
                {
                    String ex ="";
                    switch (exam) 
                    {
                        case "CAT 1":
                            ex ="1";
                            break;
                        case "CAT 2":
                            ex ="2";
                            break;
                        case "END TERM":
                            ex ="3";
                            break;
                        case "AVERAGE":
                            ex ="4";
                            break;
                    }
                    if(!combo_form.getSelectedItem().equals("--Select Form--"))
                    {
                        try{
                            String getCat1 ="SELECT subject, entry, A, Am, Bp, B,Bm, Cp, C,Cm,Dp, D, Dm, E, X, MM,  FIND_IN_SET( MM, (SELECT GROUP_CONCAT( MM ORDER BY MM DESC ) FROM analysis WHERE form = '"+form+"' AND term = '"+term+"' AND yearr = '"+year+"')) AS rank FROM analysis WHERE form = '"+form+"' AND term = '"+term+"' AND yearr = '"+year+"' ORDER BY MM desc";
                            stm = conn.createStatement();
                            rs = stm.executeQuery(getCat1);

                            int r = 0;
                            while(rs.next())
                            {
                                sub_merit.setValueAt(rs.getString("rank"), r, 0);
                                sub_merit.setValueAt(rs.getString("subject"), r, 1);
                                sub_merit.setValueAt(rs.getString("entry"), r, 2);
                                sub_merit.setValueAt(rs.getString("A"), r, 3);
                                sub_merit.setValueAt(rs.getString("Am"), r, 4);
                                sub_merit.setValueAt(rs.getString("Bp"), r, 5);
                                sub_merit.setValueAt(rs.getString("B"), r, 6);
                                sub_merit.setValueAt(rs.getString("Bm"), r, 7);
                                sub_merit.setValueAt(rs.getString("Cp"), r, 8);
                                sub_merit.setValueAt(rs.getString("C"), r, 9);
                                sub_merit.setValueAt(rs.getString("Cm"), r, 10);
                                sub_merit.setValueAt(rs.getString("Dp"), r, 11);
                                sub_merit.setValueAt(rs.getString("D"), r, 12);
                                sub_merit.setValueAt(rs.getString("Dm"), r, 13);
                                sub_merit.setValueAt(rs.getString("E"), r, 14);
                                sub_merit.setValueAt(rs.getString("X"), r, 15);
                                sub_merit.setValueAt(rs.getString("MM"), r, 16);
                                r++;
                            }
                            rs.close();
                            conn.close();

                        }catch(Exception e)
                        {
                            e.printStackTrace();
                        }
                    }
                        
                }else{
                    JOptionPane.showMessageDialog(this, "Kindly check your exam selection","Error", JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(this, "Kindly check your term selection","Error", JOptionPane.ERROR_MESSAGE);
            }
            
        }else{
            JOptionPane.showMessageDialog(this, "Kindly check your year selection","Error", JOptionPane.ERROR_MESSAGE);
        }
         
    }//GEN-LAST:event_combo_formActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        DbConnection Connect = new DbConnection();
        conn = Connect.Connectdb();
        String term = (String) combo_term.getSelectedItem();
        String year = (String) combo_year.getSelectedItem();
        String exam = (String) combo_exam.getSelectedItem();
        if(!year.equals("--Select Year--"))
        {
            if(!term.equals("--Select Term--"))
            {
                if(!exam.equals("--Select Exam--"))
                {
                    try{
                        String getCat1 ="SELECT * FROM `exammg` WHERE `yearr` = '"+year+"' AND term = '"+term+"' AND exam = '"+exam+"'";
                        stm = conn.createStatement();
                        rs = stm.executeQuery(getCat1);

                        int r = 0;
                        while(rs.next())
                        {
                            table_mg.setValueAt(rs.getString("form"), r, 0);
                            table_mg.setValueAt(rs.getString("entry"), r, 1);
                            table_mg.setValueAt(rs.getString("A"), r, 2);
                            table_mg.setValueAt(rs.getString("Am"), r, 3);
                            table_mg.setValueAt(rs.getString("Bp"), r, 4);
                            table_mg.setValueAt(rs.getString("B"), r, 5);
                            table_mg.setValueAt(rs.getString("Bm"), r, 6);
                            table_mg.setValueAt(rs.getString("Cp"), r, 7);
                            table_mg.setValueAt(rs.getString("C"), r, 8);
                            table_mg.setValueAt(rs.getString("Cm"), r, 9);
                            table_mg.setValueAt(rs.getString("Dp"), r, 10);
                            table_mg.setValueAt(rs.getString("D"), r, 11);
                            table_mg.setValueAt(rs.getString("Dm"), r, 12);
                            table_mg.setValueAt(rs.getString("E"), r, 13);
                            table_mg.setValueAt(rs.getString("X"), r, 14);
                            table_mg.setValueAt(rs.getString("mean"), r, 15);
                            r++;
                        }
                        rs.close();
                        conn.close();

                    }catch(Exception e)
                    {
                        e.printStackTrace();
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "Kindly check your exam selection","Error", JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(this, "Kindly check your term selection","Error", JOptionPane.ERROR_MESSAGE);
            }
            
        }else{
            JOptionPane.showMessageDialog(this, "Kindly check your year selection","Error", JOptionPane.ERROR_MESSAGE);
        }  
        

    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        //JOptionPane.showConfirmDialog(null, "ewfcwe");
//        classMG cm = new classMG();
//        cm.getMG("1", "2016", "1", "CAT 1");
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExamAnalysis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExamAnalysis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExamAnalysis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExamAnalysis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ExamAnalysis dialog = new ExamAnalysis(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_analyse;
    private javax.swing.JComboBox combo_exam;
    private javax.swing.JComboBox combo_form;
    private javax.swing.JComboBox combo_subject;
    private javax.swing.JComboBox combo_term;
    private javax.swing.JComboBox combo_year;
    private javax.swing.JButton jButton3;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JDesktopPane jDesktopPane2;
    private javax.swing.JDesktopPane jDesktopPane3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable sub_merit;
    private javax.swing.JTable table_disp;
    private javax.swing.JTable table_mg;
    // End of variables declaration//GEN-END:variables
}
